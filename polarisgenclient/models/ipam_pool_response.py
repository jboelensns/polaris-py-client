# coding: utf-8

"""
    Polaris API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class IPAMPoolResponse(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'default_type': 'str',
        'description': 'str',
        'free_addresses_v4': 'int',
        'free_addresses_v6': 'int',
        'id': 'int',
        'ipv4_default_prefix_length': 'int',
        'ipv6_default_prefix_length': 'int',
        'member_prefixes_v4': 'int',
        'member_prefixes_v6': 'int',
        'name': 'str',
        'tags': 'list[str]',
        'total_addresses_v4': 'int',
        'total_addresses_v6': 'int',
        'total_prefixes_v4': 'int',
        'total_prefixes_v6': 'int',
        'used_addresses_v4': 'int',
        'used_addresses_v6': 'int',
        'used_prefixes_v4': 'int',
        'used_prefixes_v6': 'int'
    }

    attribute_map = {
        'default_type': 'default_type',
        'description': 'description',
        'free_addresses_v4': 'free_addresses_v4',
        'free_addresses_v6': 'free_addresses_v6&quot;',
        'id': 'id',
        'ipv4_default_prefix_length': 'ipv4_default_prefix_length',
        'ipv6_default_prefix_length': 'ipv6_default_prefix_length',
        'member_prefixes_v4': 'member_prefixes_v4',
        'member_prefixes_v6': 'member_prefixes_v6',
        'name': 'name',
        'tags': 'tags',
        'total_addresses_v4': 'total_addresses_v4',
        'total_addresses_v6': 'total_addresses_v6',
        'total_prefixes_v4': 'total_prefixes_v4',
        'total_prefixes_v6': 'total_prefixes_v6',
        'used_addresses_v4': 'used_addresses_v4',
        'used_addresses_v6': 'used_addresses_v6&quot;',
        'used_prefixes_v4': 'used_prefixes_v4',
        'used_prefixes_v6': 'used_prefixes_v6'
    }

    def __init__(self, default_type=None, description=None, free_addresses_v4=None, free_addresses_v6=None, id=None, ipv4_default_prefix_length=None, ipv6_default_prefix_length=None, member_prefixes_v4=None, member_prefixes_v6=None, name=None, tags=None, total_addresses_v4=None, total_addresses_v6=None, total_prefixes_v4=None, total_prefixes_v6=None, used_addresses_v4=None, used_addresses_v6=None, used_prefixes_v4=None, used_prefixes_v6=None):  # noqa: E501
        """IPAMPoolResponse - a model defined in Swagger"""  # noqa: E501

        self._default_type = None
        self._description = None
        self._free_addresses_v4 = None
        self._free_addresses_v6 = None
        self._id = None
        self._ipv4_default_prefix_length = None
        self._ipv6_default_prefix_length = None
        self._member_prefixes_v4 = None
        self._member_prefixes_v6 = None
        self._name = None
        self._tags = None
        self._total_addresses_v4 = None
        self._total_addresses_v6 = None
        self._total_prefixes_v4 = None
        self._total_prefixes_v6 = None
        self._used_addresses_v4 = None
        self._used_addresses_v6 = None
        self._used_prefixes_v4 = None
        self._used_prefixes_v6 = None
        self.discriminator = None

        if default_type is not None:
            self.default_type = default_type
        if description is not None:
            self.description = description
        if free_addresses_v4 is not None:
            self.free_addresses_v4 = free_addresses_v4
        if free_addresses_v6 is not None:
            self.free_addresses_v6 = free_addresses_v6
        if id is not None:
            self.id = id
        if ipv4_default_prefix_length is not None:
            self.ipv4_default_prefix_length = ipv4_default_prefix_length
        if ipv6_default_prefix_length is not None:
            self.ipv6_default_prefix_length = ipv6_default_prefix_length
        if member_prefixes_v4 is not None:
            self.member_prefixes_v4 = member_prefixes_v4
        if member_prefixes_v6 is not None:
            self.member_prefixes_v6 = member_prefixes_v6
        self.name = name
        if tags is not None:
            self.tags = tags
        if total_addresses_v4 is not None:
            self.total_addresses_v4 = total_addresses_v4
        if total_addresses_v6 is not None:
            self.total_addresses_v6 = total_addresses_v6
        if total_prefixes_v4 is not None:
            self.total_prefixes_v4 = total_prefixes_v4
        if total_prefixes_v6 is not None:
            self.total_prefixes_v6 = total_prefixes_v6
        if used_addresses_v4 is not None:
            self.used_addresses_v4 = used_addresses_v4
        if used_addresses_v6 is not None:
            self.used_addresses_v6 = used_addresses_v6
        if used_prefixes_v4 is not None:
            self.used_prefixes_v4 = used_prefixes_v4
        if used_prefixes_v6 is not None:
            self.used_prefixes_v6 = used_prefixes_v6

    @property
    def default_type(self):
        """Gets the default_type of this IPAMPoolResponse.  # noqa: E501


        :return: The default_type of this IPAMPoolResponse.  # noqa: E501
        :rtype: str
        """
        return self._default_type

    @default_type.setter
    def default_type(self, default_type):
        """Sets the default_type of this IPAMPoolResponse.


        :param default_type: The default_type of this IPAMPoolResponse.  # noqa: E501
        :type: str
        """

        self._default_type = default_type

    @property
    def description(self):
        """Gets the description of this IPAMPoolResponse.  # noqa: E501


        :return: The description of this IPAMPoolResponse.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this IPAMPoolResponse.


        :param description: The description of this IPAMPoolResponse.  # noqa: E501
        :type: str
        """

        self._description = description

    @property
    def free_addresses_v4(self):
        """Gets the free_addresses_v4 of this IPAMPoolResponse.  # noqa: E501


        :return: The free_addresses_v4 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._free_addresses_v4

    @free_addresses_v4.setter
    def free_addresses_v4(self, free_addresses_v4):
        """Sets the free_addresses_v4 of this IPAMPoolResponse.


        :param free_addresses_v4: The free_addresses_v4 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._free_addresses_v4 = free_addresses_v4

    @property
    def free_addresses_v6(self):
        """Gets the free_addresses_v6 of this IPAMPoolResponse.  # noqa: E501


        :return: The free_addresses_v6 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._free_addresses_v6

    @free_addresses_v6.setter
    def free_addresses_v6(self, free_addresses_v6):
        """Sets the free_addresses_v6 of this IPAMPoolResponse.


        :param free_addresses_v6: The free_addresses_v6 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._free_addresses_v6 = free_addresses_v6

    @property
    def id(self):
        """Gets the id of this IPAMPoolResponse.  # noqa: E501


        :return: The id of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this IPAMPoolResponse.


        :param id: The id of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def ipv4_default_prefix_length(self):
        """Gets the ipv4_default_prefix_length of this IPAMPoolResponse.  # noqa: E501


        :return: The ipv4_default_prefix_length of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._ipv4_default_prefix_length

    @ipv4_default_prefix_length.setter
    def ipv4_default_prefix_length(self, ipv4_default_prefix_length):
        """Sets the ipv4_default_prefix_length of this IPAMPoolResponse.


        :param ipv4_default_prefix_length: The ipv4_default_prefix_length of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._ipv4_default_prefix_length = ipv4_default_prefix_length

    @property
    def ipv6_default_prefix_length(self):
        """Gets the ipv6_default_prefix_length of this IPAMPoolResponse.  # noqa: E501


        :return: The ipv6_default_prefix_length of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._ipv6_default_prefix_length

    @ipv6_default_prefix_length.setter
    def ipv6_default_prefix_length(self, ipv6_default_prefix_length):
        """Sets the ipv6_default_prefix_length of this IPAMPoolResponse.


        :param ipv6_default_prefix_length: The ipv6_default_prefix_length of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._ipv6_default_prefix_length = ipv6_default_prefix_length

    @property
    def member_prefixes_v4(self):
        """Gets the member_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501


        :return: The member_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._member_prefixes_v4

    @member_prefixes_v4.setter
    def member_prefixes_v4(self, member_prefixes_v4):
        """Sets the member_prefixes_v4 of this IPAMPoolResponse.


        :param member_prefixes_v4: The member_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._member_prefixes_v4 = member_prefixes_v4

    @property
    def member_prefixes_v6(self):
        """Gets the member_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501


        :return: The member_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._member_prefixes_v6

    @member_prefixes_v6.setter
    def member_prefixes_v6(self, member_prefixes_v6):
        """Sets the member_prefixes_v6 of this IPAMPoolResponse.


        :param member_prefixes_v6: The member_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._member_prefixes_v6 = member_prefixes_v6

    @property
    def name(self):
        """Gets the name of this IPAMPoolResponse.  # noqa: E501


        :return: The name of this IPAMPoolResponse.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this IPAMPoolResponse.


        :param name: The name of this IPAMPoolResponse.  # noqa: E501
        :type: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")  # noqa: E501

        self._name = name

    @property
    def tags(self):
        """Gets the tags of this IPAMPoolResponse.  # noqa: E501


        :return: The tags of this IPAMPoolResponse.  # noqa: E501
        :rtype: list[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this IPAMPoolResponse.


        :param tags: The tags of this IPAMPoolResponse.  # noqa: E501
        :type: list[str]
        """

        self._tags = tags

    @property
    def total_addresses_v4(self):
        """Gets the total_addresses_v4 of this IPAMPoolResponse.  # noqa: E501


        :return: The total_addresses_v4 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_addresses_v4

    @total_addresses_v4.setter
    def total_addresses_v4(self, total_addresses_v4):
        """Sets the total_addresses_v4 of this IPAMPoolResponse.


        :param total_addresses_v4: The total_addresses_v4 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._total_addresses_v4 = total_addresses_v4

    @property
    def total_addresses_v6(self):
        """Gets the total_addresses_v6 of this IPAMPoolResponse.  # noqa: E501


        :return: The total_addresses_v6 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_addresses_v6

    @total_addresses_v6.setter
    def total_addresses_v6(self, total_addresses_v6):
        """Sets the total_addresses_v6 of this IPAMPoolResponse.


        :param total_addresses_v6: The total_addresses_v6 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._total_addresses_v6 = total_addresses_v6

    @property
    def total_prefixes_v4(self):
        """Gets the total_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501


        :return: The total_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_prefixes_v4

    @total_prefixes_v4.setter
    def total_prefixes_v4(self, total_prefixes_v4):
        """Sets the total_prefixes_v4 of this IPAMPoolResponse.


        :param total_prefixes_v4: The total_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._total_prefixes_v4 = total_prefixes_v4

    @property
    def total_prefixes_v6(self):
        """Gets the total_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501


        :return: The total_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._total_prefixes_v6

    @total_prefixes_v6.setter
    def total_prefixes_v6(self, total_prefixes_v6):
        """Sets the total_prefixes_v6 of this IPAMPoolResponse.


        :param total_prefixes_v6: The total_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._total_prefixes_v6 = total_prefixes_v6

    @property
    def used_addresses_v4(self):
        """Gets the used_addresses_v4 of this IPAMPoolResponse.  # noqa: E501


        :return: The used_addresses_v4 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._used_addresses_v4

    @used_addresses_v4.setter
    def used_addresses_v4(self, used_addresses_v4):
        """Sets the used_addresses_v4 of this IPAMPoolResponse.


        :param used_addresses_v4: The used_addresses_v4 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._used_addresses_v4 = used_addresses_v4

    @property
    def used_addresses_v6(self):
        """Gets the used_addresses_v6 of this IPAMPoolResponse.  # noqa: E501


        :return: The used_addresses_v6 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._used_addresses_v6

    @used_addresses_v6.setter
    def used_addresses_v6(self, used_addresses_v6):
        """Sets the used_addresses_v6 of this IPAMPoolResponse.


        :param used_addresses_v6: The used_addresses_v6 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._used_addresses_v6 = used_addresses_v6

    @property
    def used_prefixes_v4(self):
        """Gets the used_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501


        :return: The used_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._used_prefixes_v4

    @used_prefixes_v4.setter
    def used_prefixes_v4(self, used_prefixes_v4):
        """Sets the used_prefixes_v4 of this IPAMPoolResponse.


        :param used_prefixes_v4: The used_prefixes_v4 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._used_prefixes_v4 = used_prefixes_v4

    @property
    def used_prefixes_v6(self):
        """Gets the used_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501


        :return: The used_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501
        :rtype: int
        """
        return self._used_prefixes_v6

    @used_prefixes_v6.setter
    def used_prefixes_v6(self, used_prefixes_v6):
        """Sets the used_prefixes_v6 of this IPAMPoolResponse.


        :param used_prefixes_v6: The used_prefixes_v6 of this IPAMPoolResponse.  # noqa: E501
        :type: int
        """

        self._used_prefixes_v6 = used_prefixes_v6

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(IPAMPoolResponse, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, IPAMPoolResponse):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
