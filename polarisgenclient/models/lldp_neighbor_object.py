# coding: utf-8

"""
    Polaris API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.0.1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class LLDPNeighborObject(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'created_at': 'str',
        'device_name': 'str',
        'neighbor_description': 'str',
        'neighbor_device': 'str',
        'neighbor_port': 'str',
        'port': 'str',
        'time_to_live': 'int'
    }

    attribute_map = {
        'created_at': 'created_at',
        'device_name': 'device_name',
        'neighbor_description': 'neighbor_description',
        'neighbor_device': 'neighbor_device',
        'neighbor_port': 'neighbor_port',
        'port': 'port',
        'time_to_live': 'time_to_live'
    }

    def __init__(self, created_at=None, device_name=None, neighbor_description=None, neighbor_device=None, neighbor_port=None, port=None, time_to_live=None):  # noqa: E501
        """LLDPNeighborObject - a model defined in Swagger"""  # noqa: E501

        self._created_at = None
        self._device_name = None
        self._neighbor_description = None
        self._neighbor_device = None
        self._neighbor_port = None
        self._port = None
        self._time_to_live = None
        self.discriminator = None

        if created_at is not None:
            self.created_at = created_at
        if device_name is not None:
            self.device_name = device_name
        if neighbor_description is not None:
            self.neighbor_description = neighbor_description
        if neighbor_device is not None:
            self.neighbor_device = neighbor_device
        if neighbor_port is not None:
            self.neighbor_port = neighbor_port
        if port is not None:
            self.port = port
        if time_to_live is not None:
            self.time_to_live = time_to_live

    @property
    def created_at(self):
        """Gets the created_at of this LLDPNeighborObject.  # noqa: E501


        :return: The created_at of this LLDPNeighborObject.  # noqa: E501
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this LLDPNeighborObject.


        :param created_at: The created_at of this LLDPNeighborObject.  # noqa: E501
        :type: str
        """

        self._created_at = created_at

    @property
    def device_name(self):
        """Gets the device_name of this LLDPNeighborObject.  # noqa: E501


        :return: The device_name of this LLDPNeighborObject.  # noqa: E501
        :rtype: str
        """
        return self._device_name

    @device_name.setter
    def device_name(self, device_name):
        """Sets the device_name of this LLDPNeighborObject.


        :param device_name: The device_name of this LLDPNeighborObject.  # noqa: E501
        :type: str
        """

        self._device_name = device_name

    @property
    def neighbor_description(self):
        """Gets the neighbor_description of this LLDPNeighborObject.  # noqa: E501


        :return: The neighbor_description of this LLDPNeighborObject.  # noqa: E501
        :rtype: str
        """
        return self._neighbor_description

    @neighbor_description.setter
    def neighbor_description(self, neighbor_description):
        """Sets the neighbor_description of this LLDPNeighborObject.


        :param neighbor_description: The neighbor_description of this LLDPNeighborObject.  # noqa: E501
        :type: str
        """

        self._neighbor_description = neighbor_description

    @property
    def neighbor_device(self):
        """Gets the neighbor_device of this LLDPNeighborObject.  # noqa: E501


        :return: The neighbor_device of this LLDPNeighborObject.  # noqa: E501
        :rtype: str
        """
        return self._neighbor_device

    @neighbor_device.setter
    def neighbor_device(self, neighbor_device):
        """Sets the neighbor_device of this LLDPNeighborObject.


        :param neighbor_device: The neighbor_device of this LLDPNeighborObject.  # noqa: E501
        :type: str
        """

        self._neighbor_device = neighbor_device

    @property
    def neighbor_port(self):
        """Gets the neighbor_port of this LLDPNeighborObject.  # noqa: E501


        :return: The neighbor_port of this LLDPNeighborObject.  # noqa: E501
        :rtype: str
        """
        return self._neighbor_port

    @neighbor_port.setter
    def neighbor_port(self, neighbor_port):
        """Sets the neighbor_port of this LLDPNeighborObject.


        :param neighbor_port: The neighbor_port of this LLDPNeighborObject.  # noqa: E501
        :type: str
        """

        self._neighbor_port = neighbor_port

    @property
    def port(self):
        """Gets the port of this LLDPNeighborObject.  # noqa: E501


        :return: The port of this LLDPNeighborObject.  # noqa: E501
        :rtype: str
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this LLDPNeighborObject.


        :param port: The port of this LLDPNeighborObject.  # noqa: E501
        :type: str
        """

        self._port = port

    @property
    def time_to_live(self):
        """Gets the time_to_live of this LLDPNeighborObject.  # noqa: E501


        :return: The time_to_live of this LLDPNeighborObject.  # noqa: E501
        :rtype: int
        """
        return self._time_to_live

    @time_to_live.setter
    def time_to_live(self, time_to_live):
        """Sets the time_to_live of this LLDPNeighborObject.


        :param time_to_live: The time_to_live of this LLDPNeighborObject.  # noqa: E501
        :type: int
        """

        self._time_to_live = time_to_live

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(LLDPNeighborObject, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, LLDPNeighborObject):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
