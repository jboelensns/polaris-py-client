{
  "definitions": {
    "AgentInventoryHistoryObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "key": {
          "type": "string"
        }, 
        "key_type": {
          "type": "string"
        }, 
        "value": {
          "description": "JSON string", 
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "key_type", 
        "key", 
        "value"
      ], 
      "type": "object"
    }, 
    "AgentInventoryObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "key": {
          "type": "string"
        }, 
        "key_type": {
          "type": "string"
        }, 
        "value": {
          "description": "JSON string", 
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "key_type", 
        "key", 
        "value"
      ], 
      "type": "object"
    }, 
    "ApiHistoryObject": {
      "properties": {
        "client_headers": {
          "type": "string"
        }, 
        "client_payload": {
          "type": "string"
        }, 
        "client_user_agent": {
          "type": "string"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "duration": {
          "type": "integer"
        }, 
        "http_code": {
          "type": "integer"
        }, 
        "http_method": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "ip_address": {
          "type": "string"
        }, 
        "is_error_client": {
          "type": "boolean"
        }, 
        "is_error_server": {
          "type": "boolean"
        }, 
        "is_success": {
          "type": "boolean"
        }, 
        "server_headers": {
          "type": "string"
        }, 
        "server_payload": {
          "type": "string"
        }, 
        "uri": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ArpAgentObject": {
      "properties": {
        "address": {
          "example": "192.168.1.254", 
          "type": "string"
        }, 
        "mac": {
          "example": "00:50:56:c0:00:08", 
          "type": "string"
        }, 
        "port": {
          "example": "ens33", 
          "type": "string"
        }
      }, 
      "required": [
        "mac", 
        "address", 
        "port"
      ], 
      "type": "object"
    }, 
    "ArpListObject": {
      "properties": {
        "address": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "is_agent_cache": {
          "type": "boolean"
        }, 
        "mac": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "BGPCommunityObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "is_enabled": {
          "default": true, 
          "type": "boolean"
        }, 
        "name": {
          "type": "string"
        }, 
        "value": {
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "value"
      ], 
      "type": "object"
    }, 
    "BgpNeighborProcessObject": {
      "properties": {
        "allow_as_in": {
          "description": "Permit number of advertised prefixes containing duplicate ASNs into the routing domain", 
          "type": "integer"
        }, 
        "as_number": {
          "description": "Local ASN", 
          "type": "integer"
        }, 
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "description": "Device name", 
          "type": "string"
        }, 
        "ebgp_multi_hop": {
          "type": "integer"
        }, 
        "export_policy": {
          "description": "BgpRouteMap policy", 
          "type": "string"
        }, 
        "import_policy": {
          "description": "BgpRouteMap policy", 
          "type": "string"
        }, 
        "ip_address": {
          "description": "ip address of neighbor", 
          "type": "string"
        }, 
        "is_allow_as_in": {
          "type": "boolean"
        }, 
        "is_default_originate": {
          "type": "boolean"
        }, 
        "is_ebgp_multi_hop": {
          "type": "boolean"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_next_hop_self": {
          "type": "boolean"
        }, 
        "is_peer_group": {
          "type": "boolean"
        }, 
        "is_remove_private_as": {
          "type": "boolean"
        }, 
        "is_send_community": {
          "type": "boolean"
        }, 
        "maximum_routes": {
          "description": "Maximum number of routes accepted from neighbor", 
          "type": "integer"
        }, 
        "password_hash": {
          "type": "string"
        }, 
        "peer_group": {
          "type": "string"
        }, 
        "remote_as": {
          "description": "ASN of neighbor", 
          "type": "string"
        }, 
        "update_source": {
          "description": "Specify source interface for BGP neighbor TCP connection", 
          "type": "string"
        }, 
        "vrf": {
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "as_number", 
        "ip_address", 
        "remote_as"
      ], 
      "type": "object"
    }, 
    "BgpProcessObject": {
      "properties": {
        "advertise_network": {
          "description": "Set of prefixes to advertise", 
          "items": "object", 
          "type": "array"
        }, 
        "as_number": {
          "description": "UUID1 string", 
          "type": "integer"
        }, 
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "maximum_paths": {
          "description": "ECMP - control the maximum number of parallel eBGP routes that the device supports", 
          "type": "integer"
        }, 
        "router_id": {
          "description": "router id / ip address", 
          "type": "string"
        }, 
        "vrf": {
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "as_number", 
        "router_id"
      ], 
      "type": "object"
    }, 
    "BgpRouteMapObject": {
      "properties": {
        "from_action": {
          "type": "string"
        }, 
        "from_tag": {
          "type": "string"
        }, 
        "ip_filter_id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_family_inet_v4": {
          "type": "boolean"
        }, 
        "is_family_inet_v6": {
          "type": "boolean"
        }, 
        "is_match_prefix_list": {
          "type": "boolean"
        }, 
        "is_match_protocol_bgp": {
          "type": "boolean"
        }, 
        "is_match_protocol_connected": {
          "type": "boolean"
        }, 
        "is_match_protocol_ospf_v2": {
          "type": "boolean"
        }, 
        "is_match_protocol_ospf_v3": {
          "type": "boolean"
        }, 
        "is_match_protocol_static": {
          "type": "boolean"
        }, 
        "is_match_route_filter": {
          "type": "boolean"
        }, 
        "is_then_deny": {
          "type": "boolean"
        }, 
        "is_then_permit": {
          "type": "boolean"
        }, 
        "route_map_id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "seq": {
          "type": "integer"
        }, 
        "seq_name": {
          "type": "string"
        }, 
        "then_action_as_prepend": {
          "type": "string"
        }, 
        "then_local_preference": {
          "type": "integer"
        }, 
        "then_seq": {
          "type": "integer"
        }, 
        "then_seq_name": {
          "type": "string"
        }
      }, 
      "required": [
        "seq", 
        "seq_name", 
        "route_map_id", 
        "ip_filter_id"
      ], 
      "type": "object"
    }, 
    "CaptureGroupObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "devices": {
          "items": "object", 
          "type": "array"
        }, 
        "session_id": {
          "description": "UUIDv1 session id", 
          "type": "string"
        }, 
        "steering_method": {
          "enum": [
            "IPSec", 
            "GRE", 
            "PXC", 
            "NSClient"
          ], 
          "type": "string"
        }, 
        "tenant_id": {
          "type": "string"
        }, 
        "ticket_id": {
          "type": "string"
        }
      }, 
      "required": [
        "session_id", 
        "steering_method", 
        "devices"
      ], 
      "type": "object"
    }, 
    "CaptureGroupObjectPost": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "devices": {
          "items": "object", 
          "type": "array"
        }, 
        "steering_method": {
          "enum": [
            "IPSec", 
            "GRE", 
            "PXC", 
            "NSClient"
          ], 
          "type": "string"
        }, 
        "tenant_id": {
          "type": "string"
        }, 
        "ticket_id": {
          "type": "string"
        }
      }, 
      "required": [
        "steering_method", 
        "devices"
      ], 
      "type": "object"
    }, 
    "CaptureGroupObjectPut": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "is_active": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "CaptureSessionObject": {
      "properties": {
        "agent_capture_exit_code": {
          "type": "integer"
        }, 
        "agent_response_code": {
          "type": "integer"
        }, 
        "agent_response_message": {
          "type": "string"
        }, 
        "agent_status": {
          "type": "string"
        }, 
        "agent_status_id": {
          "type": "integer"
        }, 
        "capture_id": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "filter_args": {
          "type": "string"
        }, 
        "pid": {
          "type": "integer"
        }, 
        "session_id": {
          "type": "string"
        }, 
        "size": {
          "type": "integer"
        }, 
        "size_limit_bytes": {
          "type": "integer"
        }, 
        "time_limit_sec": {
          "type": "integer"
        }
      }, 
      "required": [
        "device_name", 
        "session_id", 
        "filter_args"
      ], 
      "type": "object"
    }, 
    "CaptureSessionObjectPut": {
      "properties": {
        "agent_capture_exit_code": {
          "type": "integer"
        }, 
        "agent_response_code": {
          "type": "integer"
        }, 
        "agent_response_message": {
          "type": "string"
        }, 
        "agent_status": {
          "type": "string"
        }, 
        "agent_status_id": {
          "type": "integer"
        }, 
        "description": {
          "type": "string"
        }, 
        "pid": {
          "type": "integer"
        }, 
        "size": {
          "type": "integer"
        }, 
        "size_limit_bytes": {
          "type": "integer"
        }, 
        "tenant_id": {
          "type": "string"
        }, 
        "ticket_id": {
          "type": "string"
        }, 
        "time_limit_sec": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "ChangeHistoryObject": {
      "properties": {
        "change_ended_on": {
          "type": "string"
        }, 
        "change_started_on": {
          "type": "string"
        }, 
        "client_ipaddr": {
          "type": "string"
        }, 
        "client_request_payload": {
          "type": "string"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "device_request_payload": {
          "type": "string"
        }, 
        "error_message": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "is_success": {
          "type": "boolean"
        }
      }, 
      "required": [
        "device_name", 
        "id", 
        "change_started_on", 
        "change_ended_on", 
        "client_ipaddr", 
        "client_request_paylod", 
        "device_request_paylod", 
        "is_success", 
        "created_at"
      ], 
      "type": "object"
    }, 
    "ClientVersionObject": {
      "properties": {
        "client_name": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "major": {
          "type": "integer"
        }, 
        "minor": {
          "type": "integer"
        }, 
        "patch": {
          "type": "integer"
        }
      }, 
      "required": [
        "client_name"
      ], 
      "type": "object"
    }, 
    "DeviceAgentObject": {
      "properties": {
        "device_type": {
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "model_name": {
          "type": "string"
        }, 
        "os_version": {
          "type": "string"
        }, 
        "pop_name": {
          "type": "string"
        }, 
        "serial_number": {
          "type": "string"
        }
      }, 
      "required": [
        "device_type", 
        "pop_name", 
        "os_version"
      ], 
      "type": "object"
    }, 
    "DeviceBGPNeighborResponse": {
      "properties": {
        "address": {
          "type": "string"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "inbound_routemap": {
          "type": "string"
        }, 
        "local_as": {
          "type": "integer"
        }, 
        "local_id": {
          "type": "string"
        }, 
        "neighbor_address": {
          "type": "string"
        }, 
        "neighbor_as": {
          "type": "integer"
        }, 
        "neighbor_id": {
          "type": "string"
        }, 
        "outbound_routemap": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "state": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "DeviceChangeObject": {
      "properties": {
        "announce_slack": {
          "default": false, 
          "description": "Announce to slack channel change id start/stop", 
          "type": "boolean"
        }, 
        "change_id": {
          "description": "Change id", 
          "type": "string"
        }, 
        "commit": {
          "default": false, 
          "type": "boolean"
        }
      }, 
      "required": [
        "change_id", 
        "commit"
      ], 
      "type": "object"
    }, 
    "DeviceInterfaceAddressObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "ip_address": {
          "type": "string"
        }, 
        "netmask": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "prefixlen": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "DeviceInterfaceAlarmObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "guest_port_status": {
          "type": "boolean"
        }, 
        "hypervisor_device_name": {
          "type": "string"
        }, 
        "hypervisor_port": {
          "type": "string"
        }, 
        "increase_percent": {
          "type": "integer"
        }, 
        "is_guest": {
          "type": "boolean"
        }, 
        "is_hypervisor": {
          "type": "boolean"
        }, 
        "mac_address": {
          "type": "string"
        }, 
        "metric": {
          "type": "string"
        }, 
        "new_value": {
          "type": "string"
        }, 
        "old_value": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "sample_delta": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "DeviceObject": {
      "properties": {
        "agent_version": {
          "type": "string"
        }, 
        "change_enabled": {
          "type": "boolean"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "has_agent": {
          "type": "boolean"
        }, 
        "is_enable": {
          "type": "boolean"
        }, 
        "last_seen_on": {
          "type": "string"
        }, 
        "latitude": {
          "type": "number"
        }, 
        "librenms_device_id": {
          "type": "integer"
        }, 
        "longitude": {
          "type": "number"
        }, 
        "management_ip_address": {
          "type": "string"
        }, 
        "model_name": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "os": {
          "type": "string"
        }, 
        "os_version": {
          "type": "string"
        }, 
        "pop_name": {
          "type": "string"
        }, 
        "serial_number": {
          "type": "string"
        }, 
        "system_mac_address": {
          "type": "string"
        }, 
        "tacacs_ctx": {
          "type": "string"
        }, 
        "use_dns": {
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "DeviceServiceDiscoverObject": {
      "properties": {
        "ip_address": {
          "example": "127.0.0.1", 
          "type": "string"
        }, 
        "metadata": {
          "description": "optional JSON encoded metadata", 
          "example": "{\"log\": \"/var/log/polaris-agent.log\"}", 
          "type": "string"
        }, 
        "name": {
          "example": "device-name.test", 
          "type": "string"
        }, 
        "port": {
          "example": 6003, 
          "type": "string"
        }, 
        "protocol": {
          "example": "tcp", 
          "type": "string"
        }, 
        "service_name": {
          "example": "polaris-agent", 
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "service_name", 
        "ip_address", 
        "port"
      ], 
      "type": "object"
    }, 
    "DeviceServiceObject": {
      "properties": {
        "name": {
          "description": "Device name", 
          "type": "string"
        }, 
        "pop_name": {
          "description": "Pop name", 
          "type": "string"
        }, 
        "service_name": {
          "description": "DeviceService object", 
          "example": {
            "haproxy": "734f35fd-4f31-11e9-8187-000c29a5f149"
          }, 
          "type": "object"
        }
      }, 
      "required": [
        "name", 
        "pop_name", 
        "service_name"
      ], 
      "type": "object"
    }, 
    "DeviceValidateObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "errors": {
          "description": "metadata from real-time validation", 
          "items": "object", 
          "type": "array"
        }, 
        "success": {
          "description": "metadata from real-time validation", 
          "items": "object", 
          "type": "array"
        }, 
        "validate_name": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "DhcpHelperProcessObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "description": "Device name", 
          "type": "string"
        }, 
        "dst_ipv4_address": {
          "description": "ip address to forward DHCP packets", 
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "port": {
          "description": "Port/Interface to apply dhcp helper configuration", 
          "type": "string"
        }, 
        "src_ipv4_address": {
          "description": "source ip address to use on switch", 
          "type": "string"
        }, 
        "src_vrf": {
          "description": "source VRF to use on switch", 
          "type": "string"
        }, 
        "tag_dhcp_request_packets": {
          "description": "Tag DHCP packets with content", 
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "port", 
        "dst_ipv4_address"
      ], 
      "type": "object"
    }, 
    "DnsRecordObject": {
      "properties": {
        "name": {
          "description": "dns record name", 
          "example": "foo.example.org.", 
          "type": "string"
        }, 
        "preserve_existing_records": {
          "default": true, 
          "description": "if name has existing records, preserve instead of replace", 
          "type": "boolean"
        }, 
        "records": {
          "description": "array of records", 
          "items": {
            "$ref": "#/definitions/DnsRecordsContentListObject"
          }, 
          "type": "array"
        }, 
        "ttl": {
          "default": 3600, 
          "description": "time to live", 
          "example": 300, 
          "type": "integer"
        }, 
        "type": {
          "description": "dns record type", 
          "enum": [
            "A", 
            "AAAA", 
            "CNAME", 
            "SOA", 
            "NS", 
            "SRV", 
            "TXT"
          ], 
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "type", 
        "records"
      ], 
      "type": "object"
    }, 
    "DnsRecordsContentListObject": {
      "properties": {
        "content": {
          "description": "dns content", 
          "example": "10.131.8.42", 
          "type": "string"
        }, 
        "disabled": {
          "description": "content enabled/disabled", 
          "type": "boolean"
        }
      }, 
      "required": [
        "content"
      ], 
      "type": "object"
    }, 
    "DnsZoneObject": {
      "properties": {
        "dnssec": {
          "description": "dns sec enabled/disabled bool", 
          "type": "boolean"
        }, 
        "edited_serial": {
          "type": "integer"
        }, 
        "id": {
          "description": "dns record id", 
          "example": "foo.example.org.", 
          "type": "string"
        }, 
        "kind": {
          "description": "zone kind", 
          "enum": [
            "Master", 
            "Native", 
            "Slave"
          ], 
          "type": "string"
        }, 
        "last_check": {
          "description": "timestamp of last check", 
          "type": "integer"
        }, 
        "masters": {
          "description": "array of master IP Addresses", 
          "items": "object", 
          "type": "array"
        }, 
        "name": {
          "description": "dns record name", 
          "example": "foo.example.org.", 
          "type": "string"
        }, 
        "notified_serial": {
          "type": "integer"
        }, 
        "serial": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "DnsZoneRecordListObject": {
      "properties": {
        "comments": {
          "description": "description", 
          "type": "string"
        }, 
        "name": {
          "description": "dns record name", 
          "example": "foo.example.org.", 
          "type": "string"
        }, 
        "records": {
          "description": "array of records", 
          "items": "object", 
          "schema": {
            "$ref": "#/definitions/DnsZoneRecordsContentListObject"
          }, 
          "type": "array"
        }, 
        "ttl": {
          "description": "time to live", 
          "example": 3600, 
          "type": "integer"
        }, 
        "type": {
          "description": "dns record type", 
          "enum": [
            "A", 
            "AAAA", 
            "CNAME", 
            "SOA", 
            "NS", 
            "SRV"
          ], 
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "DnsZoneRecordObject": {
      "properties": {
        "dnssec": {
          "description": "dns sec enabled/disabled bool", 
          "type": "boolean"
        }, 
        "edited_serial": {
          "type": "integer"
        }, 
        "kind": {
          "description": "zone kind", 
          "enum": [
            "Master", 
            "Native", 
            "Slave"
          ], 
          "type": "string"
        }, 
        "last_check": {
          "description": "timestamp of last check", 
          "type": "integer"
        }, 
        "masters": {
          "description": "array of master IP Addresses", 
          "items": "object", 
          "type": "array"
        }, 
        "notified_serial": {
          "type": "integer"
        }, 
        "rrsets": {
          "description": "array of records", 
          "items": "object", 
          "schema": {
            "$ref": "#/definitions/DnsZoneRecordListObject"
          }, 
          "type": "array"
        }, 
        "serial": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "DnsZoneRecordsContentListObject": {
      "properties": {
        "content": {
          "description": "dns content", 
          "example": "10.131.8.42", 
          "type": "string"
        }, 
        "disabled": {
          "description": "content enabled/disabled", 
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "DnsZoneResponse": {
      "items": {
        "properties": {
          "extattrs": {
            "properties": {
              "Service": {
                "properties": {
                  "value": {
                    "type": "string"
                  }
                }, 
                "type": "object"
              }
            }, 
            "type": "object"
          }, 
          "fqdn": {
            "type": "string"
          }, 
          "grid_primary": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                }, 
                "stealth": {
                  "type": "boolean"
                }
              }, 
              "type": "object"
            }, 
            "type": "array"
          }, 
          "grid_secondaries": {
            "items": {
              "properties": {
                "name": {
                  "type": "string"
                }, 
                "stealth": {
                  "type": "boolean"
                }
              }, 
              "type": "object"
            }, 
            "type": "array"
          }, 
          "prefix": {
            "type": "string"
          }, 
          "view": {
            "type": "string"
          }, 
          "zone_format": {
            "type": "string"
          }
        }, 
        "type": "object"
      }, 
      "type": "array"
    }, 
    "DuplicateIpMonitoringObject": {
      "properties": {
        "created_at": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "ip_address": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "system_uuid": {
          "type": "string"
        }
      }, 
      "required": [
        "ip_address", 
        "device_name", 
        "port", 
        "created_at"
      ], 
      "type": "object"
    }, 
    "DuplicateIpObject": {
      "properties": {
        "created_at": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "ip_address": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "system_uuid": {
          "type": "string"
        }
      }, 
      "required": [
        "ip_address", 
        "device_name", 
        "port", 
        "created_at"
      ], 
      "type": "object"
    }, 
    "GtmWideIpAliasConfigObject": {
      "properties": {
        "alias": {
          "type": "string"
        }, 
        "domain": {
          "type": "string"
        }, 
        "is_add": {
          "type": "boolean"
        }, 
        "is_delete": {
          "type": "boolean"
        }
      }, 
      "required": [
        "domain", 
        "alias", 
        "is_add", 
        "is_delete"
      ], 
      "type": "object"
    }, 
    "HostBgpNeighborObject": {
      "properties": {
        "address": {
          "description": "Host IP address for BGP session", 
          "type": "string"
        }, 
        "application": {
          "description": "Application name", 
          "type": "string"
        }, 
        "device_address": {
          "description": "Device IP address for BGP session", 
          "type": "string"
        }, 
        "device_name": {
          "description": "Device name", 
          "type": "string"
        }, 
        "local_as": {
          "description": "Host AS", 
          "type": "integer"
        }, 
        "peer_as": {
          "description": "Peer AS", 
          "type": "integer"
        }
      }, 
      "required": [
        "device_name", 
        "application", 
        "address", 
        "device_address", 
        "local_as", 
        "peer_as"
      ], 
      "type": "object"
    }, 
    "HostBgpNeighborPrefixObject": {
      "properties": {
        "application": {
          "description": "Application name", 
          "type": "string"
        }, 
        "communities": {
          "description": "List of community names", 
          "items": "object", 
          "type": "array"
        }, 
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "description": "Device name", 
          "type": "string"
        }, 
        "is_enabled": {
          "description": "Announce prefix state", 
          "type": "boolean"
        }, 
        "local_pref": {
          "description": "Local preference", 
          "type": "integer"
        }, 
        "med": {
          "description": "Multi-Exit discriminator", 
          "type": "integer"
        }, 
        "neighbor_id": {
          "description": "UUIDv1 of HostBgpNeighbor", 
          "type": "string"
        }, 
        "next_hop": {
          "description": "Next hop IP Address", 
          "type": "string"
        }, 
        "origin": {
          "description": "Origin name", 
          "enum": [
            "iBGP", 
            "eBGP", 
            "INCOMPLETE"
          ], 
          "type": "string"
        }, 
        "prefix": {
          "description": "IP Prefix", 
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "application", 
        "neighbor_id", 
        "prefix", 
        "next_hop", 
        "origin"
      ], 
      "type": "object"
    }, 
    "HypervisorObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "dom_name": {
          "type": "string"
        }, 
        "guest_hostname": {
          "type": "string"
        }, 
        "guest_ip_addresses": {
          "items": "string", 
          "type": "array"
        }, 
        "guest_mtu": {
          "type": "integer"
        }, 
        "guest_port": {
          "type": "string"
        }, 
        "guest_rx_bytes": {
          "type": "integer"
        }, 
        "guest_rx_drop": {
          "type": "integer"
        }, 
        "guest_rx_errors": {
          "type": "integer"
        }, 
        "guest_rx_frame": {
          "type": "integer"
        }, 
        "guest_rx_multicast": {
          "type": "integer"
        }, 
        "guest_rx_packets": {
          "type": "integer"
        }, 
        "guest_tx_bytes": {
          "type": "integer"
        }, 
        "guest_tx_carrier": {
          "type": "integer"
        }, 
        "guest_tx_drop": {
          "type": "integer"
        }, 
        "guest_tx_errors": {
          "type": "integer"
        }, 
        "guest_tx_packets": {
          "type": "integer"
        }, 
        "mac_address": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "mac_address", 
        "port"
      ], 
      "type": "object"
    }, 
    "IPAMPool": {
      "properties": {
        "default_type": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "ipv4_default_prefix_length": {
          "type": "integer"
        }, 
        "ipv6_default_prefix_length": {
          "type": "integer"
        }, 
        "name": {
          "type": "string"
        }, 
        "tags_list": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }
      }, 
      "required": [
        "name"
      ], 
      "type": "object"
    }, 
    "IPAMPoolResponse": {
      "properties": {
        "default_type": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "free_addresses_v4": {
          "type": "integer"
        }, 
        "free_addresses_v6\"": {
          "type": "integer"
        }, 
        "id": {
          "type": "integer"
        }, 
        "ipv4_default_prefix_length": {
          "type": "integer"
        }, 
        "ipv6_default_prefix_length": {
          "type": "integer"
        }, 
        "member_prefixes_v4": {
          "type": "integer"
        }, 
        "member_prefixes_v6": {
          "type": "integer"
        }, 
        "name": {
          "type": "string"
        }, 
        "tags": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "total_addresses_v4": {
          "type": "integer"
        }, 
        "total_addresses_v6": {
          "type": "integer"
        }, 
        "total_prefixes_v4": {
          "type": "integer"
        }, 
        "total_prefixes_v6": {
          "type": "integer"
        }, 
        "used_addresses_v4": {
          "type": "integer"
        }, 
        "used_addresses_v6\"": {
          "type": "integer"
        }, 
        "used_prefixes_v4": {
          "type": "integer"
        }, 
        "used_prefixes_v6": {
          "type": "integer"
        }
      }, 
      "required": [
        "name"
      ], 
      "type": "object"
    }, 
    "IpFilterObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string"
        }
      }, 
      "required": [
        "name"
      ], 
      "type": "object"
    }, 
    "IpFilterRuleObject": {
      "properties": {
        "ip_filter_id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_v4": {
          "type": "boolean"
        }, 
        "is_v6": {
          "type": "boolean"
        }, 
        "prefix": {
          "type": "string"
        }, 
        "prefix_len_eq": {
          "type": "integer"
        }, 
        "prefix_len_ge": {
          "type": "integer"
        }, 
        "prefix_len_le": {
          "type": "integer"
        }, 
        "seq": {
          "type": "integer"
        }
      }, 
      "required": [
        "seq", 
        "ip_filter_id", 
        "prefix"
      ], 
      "type": "object"
    }, 
    "IpamUtilizationObject": {
      "properties": {
        "ip_prefix": {
          "type": "string"
        }, 
        "utilization_percent": {
          "type": "integer"
        }
      }, 
      "required": [
        "ip_prefix", 
        "utilization_percent"
      ], 
      "type": "object"
    }, 
    "LLDPNeighborObject": {
      "properties": {
        "created_at": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "neighbor_description": {
          "type": "string"
        }, 
        "neighbor_device": {
          "type": "string"
        }, 
        "neighbor_port": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "time_to_live": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "LoginObject": {
      "properties": {
        "password": {
          "type": "string"
        }, 
        "username": {
          "type": "string"
        }
      }, 
      "required": [
        "username", 
        "password"
      ], 
      "type": "object"
    }, 
    "MacResponse": {
      "properties": {
        "age": {
          "type": "integer"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "mac": {
          "type": "string"
        }, 
        "vlan": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "OSPFNeighborObject": {
      "properties": {
        "address": {
          "type": "string"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "dead": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "instance": {
          "type": "string"
        }, 
        "port": {
          "type": "string"
        }, 
        "priority": {
          "type": "integer"
        }, 
        "state": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "RouteMapObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "id": {
          "description": "UUID1 string", 
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string"
        }, 
        "version": {
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "version"
      ], 
      "type": "object"
    }, 
    "ServiceMetadataObject": {
      "properties": {
        "created_at": {
          "type": "string"
        }, 
        "external_addresses": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "external_name": {
          "type": "string"
        }, 
        "external_ports": {
          "items": {
            "type": "integer"
          }, 
          "type": "array"
        }, 
        "health_check_urls": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "name": {
          "type": "string"
        }, 
        "pop_name": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "type": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "ServiceObject": {
      "properties": {
        "external_addresses": {
          "description": "Array of IPv4 or IPv6 addresses", 
          "items": "string", 
          "type": "array"
        }, 
        "external_name": {
          "type": "string"
        }, 
        "external_ports": {
          "description": "Array of protocol:port definitions", 
          "items": "object", 
          "type": "array"
        }, 
        "health_check_urls": {
          "description": "Array of health check URLs", 
          "items": "string", 
          "type": "array"
        }, 
        "name": {
          "type": "string"
        }, 
        "pop_name": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "type": {
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "pop_name", 
        "status", 
        "type"
      ], 
      "type": "object"
    }, 
    "SystemImageBootHistoryObject": {
      "properties": {
        "device_name": {
          "type": "string"
        }, 
        "mac_addresses": {
          "items": "object", 
          "type": "array"
        }, 
        "system_serial": {
          "type": "string"
        }, 
        "system_uuid": {
          "type": "string"
        }
      }, 
      "required": [
        "mac_addresses", 
        "system_uuid", 
        "system_serial"
      ], 
      "type": "object"
    }, 
    "SystemImageBootObject": {
      "properties": {
        "cmdline": {
          "type": "string"
        }, 
        "initrd": {
          "items": "object", 
          "type": "array"
        }, 
        "kernel": {
          "type": "string"
        }
      }, 
      "required": [
        "kernel"
      ], 
      "type": "object"
    }, 
    "SystemImageObject": {
      "properties": {
        "chassis_part_number": {
          "type": "string"
        }, 
        "chassis_serial_number": {
          "type": "string"
        }, 
        "chassis_type": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "firmware_version": {
          "type": "string"
        }, 
        "hardware_generation": {
          "type": "string"
        }, 
        "hostname": {
          "type": "string"
        }, 
        "ipmi_mac_address": {
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_vm": {
          "type": "boolean"
        }, 
        "mac_addresses": {
          "items": "object", 
          "type": "array"
        }, 
        "memory": {
          "type": "string"
        }, 
        "vendor_asset_tag": {
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "mac_addresses"
      ], 
      "type": "object"
    }, 
    "SystemImageProvisionObject": {
      "properties": {
        "cmdline": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "hardware_generation": {
          "type": "string"
        }, 
        "initrd": {
          "items": "object", 
          "type": "array"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_vm": {
          "type": "boolean"
        }, 
        "kernel": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "preseed": {
          "type": "string"
        }
      }, 
      "required": [
        "name", 
        "kernel"
      ], 
      "type": "object"
    }, 
    "SystemProvisionObject": {
      "properties": {
        "autostart": {
          "default": true, 
          "type": "boolean"
        }, 
        "base_image": {
          "default": "default_vm", 
          "type": "string"
        }, 
        "cpus": {
          "default": 1, 
          "format": "int32", 
          "type": "integer"
        }, 
        "fqdn": {
          "type": "string"
        }, 
        "kvm_hostname": {
          "type": "string"
        }, 
        "memoryKiB": {
          "default": 3906250, 
          "format": "uint64", 
          "type": "integer"
        }, 
        "name": {
          "type": "string"
        }, 
        "network_config": {
          "properties": {
            "interfaces": {
              "items": {
                "$ref": "#/definitions/interface"
              }, 
              "type": "array"
            }, 
            "routes": {
              "items": {
                "$ref": "#/definitions/route"
              }, 
              "type": "array"
            }
          }, 
          "type": "object"
        }, 
        "override_domain": {
          "type": "string"
        }, 
        "pop_name": {
          "type": "string"
        }
      }, 
      "required": [
        "pop_name", 
        "kvm_hostname"
      ], 
      "type": "object"
    }, 
    "ValidationHistoryObject": {
      "properties": {
        "client_ipaddr": {
          "type": "string"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "ended_on": {
          "type": "string"
        }, 
        "error_message": {
          "type": "string"
        }, 
        "id": {
          "type": "string"
        }, 
        "is_success": {
          "type": "boolean"
        }, 
        "module_name": {
          "type": "string"
        }, 
        "module_request_payload": {
          "type": "string"
        }, 
        "registered_on": {
          "type": "string"
        }, 
        "started_on": {
          "type": "string"
        }, 
        "username": {
          "type": "string"
        }
      }, 
      "required": [
        "username", 
        "device_name", 
        "id", 
        "change_started_on", 
        "change_ended_on", 
        "client_ipaddr", 
        "client_request_paylod", 
        "device_request_paylod", 
        "is_success", 
        "created_at"
      ], 
      "type": "object"
    }, 
    "VlanInterfaceObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "num": {
          "type": "integer"
        }, 
        "port": {
          "type": "string"
        }
      }, 
      "required": [
        "device_name", 
        "num", 
        "port"
      ], 
      "type": "object"
    }, 
    "VlanObject": {
      "properties": {
        "description": {
          "type": "string"
        }, 
        "device_name": {
          "type": "string"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_native": {
          "type": "boolean"
        }, 
        "name": {
          "type": "string"
        }, 
        "num": {
          "type": "integer"
        }
      }, 
      "required": [
        "device_name", 
        "num"
      ], 
      "type": "object"
    }, 
    "ZtpDevice": {
      "properties": {
        "is_enabled": {
          "type": "boolean"
        }, 
        "management_ip_address": {
          "type": "string"
        }, 
        "model_name": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "os": {
          "type": "string"
        }, 
        "os_version_intended": {
          "type": "string"
        }, 
        "os_version_operating": {
          "type": "string"
        }, 
        "serial_number": {
          "type": "string"
        }, 
        "system_mac_address": {
          "type": "string"
        }, 
        "tacacs_ctx": {
          "type": "string"
        }
      }, 
      "required": [
        "serial_number"
      ], 
      "type": "object"
    }, 
    "error": {
      "properties": {
        "code": {
          "type": "string"
        }, 
        "message": {
          "type": "string"
        }, 
        "status": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "interface": {
      "properties": {
        "fqdn": {
          "type": "string"
        }, 
        "ip_address": {
          "type": "string"
        }, 
        "ip_gateway": {
          "type": "string"
        }, 
        "ip_netmask": {
          "type": "string"
        }, 
        "name": {
          "type": "string"
        }, 
        "num_vfs": {
          "default": 2, 
          "type": "integer"
        }, 
        "secondary_ips": {
          "type": "integer"
        }, 
        "type": {
          "default": "bridged", 
          "type": "string"
        }, 
        "vlan": {
          "default": 800, 
          "type": "integer"
        }, 
        "vlan_tagged": {
          "default": true, 
          "type": "boolean"
        }
      }, 
      "type": "object"
    }, 
    "pop": {
      "properties": {
        "address": {
          "type": "string"
        }, 
        "airport_code": {
          "type": "string"
        }, 
        "can_provision": {
          "type": "boolean"
        }, 
        "city": {
          "type": "string"
        }, 
        "country_code": {
          "type": "string"
        }, 
        "created_at": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "is_dp": {
          "type": "boolean"
        }, 
        "is_enabled": {
          "type": "boolean"
        }, 
        "is_mp": {
          "type": "boolean"
        }, 
        "latitude": {
          "type": "number"
        }, 
        "longitude": {
          "type": "number"
        }, 
        "name": {
          "type": "string"
        }, 
        "network_revision": {
          "type": "string"
        }, 
        "region": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "vendor": {
          "type": "string"
        }
      }, 
      "type": "object"
    }, 
    "prefix": {
      "properties": {
        "added": {
          "type": "string"
        }, 
        "comment": {
          "type": "string"
        }, 
        "description": {
          "type": "string"
        }, 
        "display": {
          "type": "boolean"
        }, 
        "display_prefix": {
          "type": "string"
        }, 
        "family": {
          "default": 4, 
          "enum": [
            4, 
            6
          ], 
          "type": "integer"
        }, 
        "id": {
          "type": "integer"
        }, 
        "indent": {
          "type": "integer"
        }, 
        "inherited_tags": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "is_private": {
          "type": "boolean"
        }, 
        "last_modified": {
          "type": "string"
        }, 
        "node": {
          "type": "string"
        }, 
        "prefix": {
          "type": "string"
        }, 
        "status": {
          "type": "string"
        }, 
        "tags": {
          "items": {
            "type": "string"
          }, 
          "type": "array"
        }, 
        "type": {
          "type": "string"
        }, 
        "used_addresses": {
          "type": "integer"
        }, 
        "vlan": {
          "type": "integer"
        }
      }, 
      "type": "object"
    }, 
    "route": {
      "properties": {
        "interface_name": {
          "type": "string"
        }, 
        "ip_destination": {
          "type": "string"
        }, 
        "ip_next_hop": {
          "type": "string"
        }
      }, 
      "type": "object"
    }
  }, 
  "info": {
    "description": "", 
    "termsOfService": "/tos", 
    "title": "Polaris API", 
    "version": "0.0.1"
  }, 
  "paths": {
    "/api/v0.1/admin/api/history": {
      "get": {
        "description": "Returns a list of api events<br/>", 
        "operationId": "ApiHistoryGet", 
        "parameters": [
          {
            "description": "IP Address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "UUID1 str", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ApiHistoryObject"
            }
          }
        }, 
        "summary": "ApiHistoryRoute.post", 
        "tags": [
          "ApiHistory"
        ]
      }
    }, 
    "/api/v0.1/agent/inventory": {
      "get": {
        "operationId": "AgentInventoryGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/AgentInventoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "AgentInventoryRoute.get", 
        "tags": [
          "AgentInventory"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "AgentInventoryPost", 
        "parameters": [
          {
            "description": "Agent inventory object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryObject"
            }
          }
        }, 
        "summary": "AgentInventoryRoute.post", 
        "tags": [
          "AgentInventory"
        ]
      }
    }, 
    "/api/v0.1/agent/inventory/history": {
      "get": {
        "operationId": "AgentInventoryHistoryGet", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Paginate greater than id", 
            "in": "query", 
            "name": "gt_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Paginate greater than id", 
            "in": "query", 
            "name": "lt_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Limit results to N records", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/AgentInventoryHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "AgentInventoryHistoryRoute.get", 
        "tags": [
          "AgentInventoryHistory"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "AgentInventoryHistoryPost", 
        "parameters": [
          {
            "description": "Agent inventory object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryHistoryObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryHistoryObject"
            }
          }
        }, 
        "summary": "AgentInventoryHistoryRoute.post", 
        "tags": [
          "AgentInventoryHistory"
        ]
      }
    }, 
    "/api/v0.1/agent/inventory/history/id/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "AgentInventoryHistoryDelete", 
        "parameters": [
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Agent inventory object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryHistoryObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryHistoryObject"
            }
          }
        }, 
        "summary": "AgentInventoryHistoryRoute.delete", 
        "tags": [
          "AgentInventoryHistory"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "AgentInventoryHistoryPut", 
        "parameters": [
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Agent inventory object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryHistoryObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/AgentInventoryHistoryObject"
            }
          }
        }, 
        "summary": "AgentInventoryHistoryRoute.put", 
        "tags": [
          "AgentInventoryHistory"
        ]
      }
    }, 
    "/api/v0.1/arp": {
      "get": {
        "operationId": "ArpGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ArpListObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ArpRoute.get", 
        "tags": [
          "Arp"
        ]
      }
    }, 
    "/api/v0.1/arp/{address}": {
      "get": {
        "operationId": "ArpGetByAddress", 
        "parameters": [
          {
            "description": "address", 
            "in": "path", 
            "name": "address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ArpListObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ArpRoute.get", 
        "tags": [
          "Arp"
        ]
      }
    }, 
    "/api/v0.1/auth/jwt": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "AuthJwtPost", 
        "parameters": [
          {
            "description": "Validate JWT signature", 
            "in": "body", 
            "name": "token", 
            "schema": {
              "properties": {
                "jwt": {
                  "description": "A signed JWT header string.", 
                  "type": "string"
                }
              }, 
              "required": [
                "jwt"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "204": {
            "description": "OK"
          }, 
          "401": {
            "description": "Unauthorized"
          }
        }, 
        "security": [], 
        "summary": "AuthJwt.post", 
        "tags": [
          "AuthJwt"
        ]
      }
    }, 
    "/api/v0.1/bgp": {
      "get": {
        "operationId": "BgpProcessGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        }, 
        "summary": "BgpProcessRoute.get", 
        "tags": [
          "BgpProcess"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpProcessPost", 
        "parameters": [
          {
            "description": "BgpProcess object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        }, 
        "summary": "BgpProcessRoute.post", 
        "tags": [
          "BgpProcess"
        ]
      }
    }, 
    "/api/v0.1/bgp/community": {
      "get": {
        "operationId": "BgpCommunityGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BGPCommunityObject"
            }
          }
        }, 
        "summary": "BgpCommunityRoute.get", 
        "tags": [
          "BgpCommunity"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpCommunityPost", 
        "parameters": [
          {
            "description": "BGP community object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BGPCommunityObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BGPCommunityObject"
            }
          }
        }, 
        "summary": "BgpCommunityRoute.post", 
        "tags": [
          "BgpCommunity"
        ]
      }
    }, 
    "/api/v0.1/bgp/community/{name}": {
      "get": {
        "operationId": "BgpCommunityGetByName", 
        "parameters": [
          {
            "description": "Community name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BGPCommunityObject"
            }
          }
        }, 
        "summary": "BgpCommunityRoute.get", 
        "tags": [
          "BgpCommunity"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpCommunityPut", 
        "parameters": [
          {
            "description": "Community name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "BGP community object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                }, 
                "is_enabled": {
                  "default": true, 
                  "type": "boolean"
                }, 
                "value": {
                  "type": "string"
                }
              }, 
              "required": [
                "name", 
                "value"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BGPCommunityObject"
            }
          }
        }, 
        "summary": "BgpCommunityRoute.put", 
        "tags": [
          "BgpCommunity"
        ]
      }
    }, 
    "/api/v0.1/bgp/community/{name}/value/{value}": {
      "delete": {
        "operationId": "BgpCommunityDelete", 
        "parameters": [
          {
            "description": "BGP community name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "BGP community value", 
            "in": "path", 
            "name": "value", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BGPCommunityObject"
            }
          }
        }, 
        "summary": "BgpCommunityRoute.delete", 
        "tags": [
          "BgpCommunity"
        ]
      }
    }, 
    "/api/v0.1/bgp/neighbor": {
      "get": {
        "operationId": "BgpNeighborGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceBGPNeighborResponse"
            }
          }
        }, 
        "summary": "BgpNeighborRoute.get", 
        "tags": [
          "BgpNeighbor"
        ]
      }
    }, 
    "/api/v0.1/bgp/neighbor/process": {
      "get": {
        "operationId": "BgpNeighborProcessGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        }, 
        "summary": "BgpNeighborProcessRoute.get", 
        "tags": [
          "BgpNeighborProcess"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpNeighborProcessPost", 
        "parameters": [
          {
            "description": "BgpNeighborProcess object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        }, 
        "summary": "BgpNeighborProcessRoute.post", 
        "tags": [
          "BgpNeighborProcess"
        ]
      }
    }, 
    "/api/v0.1/capture/group": {
      "get": {
        "operationId": "CaptureGroupGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/CaptureGroupObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "CaptureGroupRoute.get", 
        "tags": [
          "CaptureGroup"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "CaptureGroupPost", 
        "parameters": [
          {
            "description": "CaptureGroupObject", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/CaptureGroupObjectPost"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/CaptureGroupObject"
            }
          }
        }, 
        "summary": "CaptureGroupRoute.post", 
        "tags": [
          "CaptureGroup"
        ]
      }
    }, 
    "/api/v0.1/capture/group/{session_id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "CaptureGroupDelete", 
        "parameters": [
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "session_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/CaptureGroupObject"
            }
          }
        }, 
        "summary": "CaptureGroupRoute.delete", 
        "tags": [
          "CaptureGroup"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "CaptureGroupPut", 
        "parameters": [
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "session_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "CaptureGroupObjectPut", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/CaptureGroupObjectPut"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/CaptureGroupObject"
            }
          }
        }, 
        "summary": "CaptureGroupRoute.put", 
        "tags": [
          "CaptureGroup"
        ]
      }
    }, 
    "/api/v0.1/capture/session": {
      "get": {
        "operationId": "CaptureSessionGet", 
        "parameters": [
          {
            "description": "UUIDv1 session id", 
            "in": "query", 
            "name": "session_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "UUIDv1 id", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/CaptureSessionObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "CaptureSessionRoute.get", 
        "tags": [
          "CaptureSession"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "CaptureSessionPost", 
        "parameters": [
          {
            "description": "CaptureSessionObject", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/CaptureSessionObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/CaptureSessionObject"
            }
          }
        }, 
        "summary": "CaptureSessionRoute.post", 
        "tags": [
          "CaptureSession"
        ]
      }
    }, 
    "/api/v0.1/capture/session/{device_name}": {
      "get": {
        "operationId": "CaptureSessionGetByDevice", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "UUIDv1 session id", 
            "in": "query", 
            "name": "session_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "UUIDv1 id", 
            "in": "query", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/CaptureSessionObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "CaptureSessionRoute.get", 
        "tags": [
          "CaptureSession"
        ]
      }
    }, 
    "/api/v0.1/capture/session/{device_name}/group/{session_id}/id/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "CaptureSessionDelete", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "session_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/CaptureSessionObject"
            }
          }
        }, 
        "summary": "CaptureSessionRoute.delete", 
        "tags": [
          "CaptureSession"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "CaptureSessionPut", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "session_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "CaptureSessionObjectPut", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/CaptureSessionObjectPut"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/CaptureSessionObject"
            }
          }
        }, 
        "summary": "CaptureSessionRoute.put", 
        "tags": [
          "CaptureSession"
        ]
      }
    }, 
    "/api/v0.1/change/history": {
      "get": {
        "operationId": "ChangeHistoryGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ChangeHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ChangeHistoryRoute.get", 
        "tags": [
          "ChangeHistory"
        ]
      }
    }, 
    "/api/v0.1/client/version/": {
      "get": {
        "operationId": "ClientVersionGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ClientVersionObject"
            }
          }
        }, 
        "summary": "ClientVersionRoute.get", 
        "tags": [
          "ClientVersion"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ClientVersionPost", 
        "parameters": [
          {
            "description": "ClientVersion object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ClientVersionObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ClientVersionObject"
            }
          }
        }, 
        "summary": "ClientVersionRoute.post", 
        "tags": [
          "ClientVersion"
        ]
      }
    }, 
    "/api/v0.1/client/version/{client_name}": {
      "delete": {
        "operationId": "ClientVersionDelete", 
        "parameters": [
          {
            "description": "Client version name", 
            "in": "path", 
            "name": "client_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ClientVersionObject"
            }
          }
        }, 
        "summary": "ClientVersionRoute.delete", 
        "tags": [
          "ClientVersion"
        ]
      }, 
      "get": {
        "operationId": "ClientVersionGetByName", 
        "parameters": [
          {
            "description": "client name", 
            "in": "path", 
            "name": "client_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ClientVersionObject"
            }
          }
        }, 
        "summary": "ClientVersionRoute.get", 
        "tags": [
          "ClientVersion"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ClientVersionPut", 
        "parameters": [
          {
            "description": "client name", 
            "in": "path", 
            "name": "client_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Client version object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                }, 
                "major": {
                  "type": "integer"
                }, 
                "minor": {
                  "type": "integer"
                }, 
                "patch": {
                  "type": "integer"
                }
              }, 
              "required": [
                "client_name"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ClientVersionObject"
            }
          }
        }, 
        "summary": "ClientVersionRoute.put", 
        "tags": [
          "ClientVersion"
        ]
      }
    }, 
    "/api/v0.1/device": {
      "get": {
        "operationId": "DeviceGet", 
        "parameters": [
          {
            "description": "Device POP", 
            "in": "query", 
            "name": "pop_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "default": true, 
            "description": "Include agent", 
            "in": "query", 
            "name": "include_agent", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "default": false, 
            "description": "Only provide agent based devices", 
            "in": "query", 
            "name": "only_agent", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceObject"
            }
          }
        }, 
        "summary": "DeviceRoute.get", 
        "tags": [
          "Device"
        ]
      }
    }, 
    "/api/v0.1/device/service/discover": {
      "get": {
        "operationId": "DeviceServiceDiscoverGet", 
        "parameters": [
          {
            "description": "IP Address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Protocol", 
            "in": "query", 
            "name": "protocol", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceServiceDiscoverObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DeviceServiceDiscoverRoute.get", 
        "tags": [
          "DeviceServiceDiscover"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceServiceDiscoverPost", 
        "parameters": [
          {
            "description": "Device Service Discover object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceDiscoverObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceDiscoverObject"
            }
          }
        }, 
        "summary": "DeviceServiceDiscoverRoute.post", 
        "tags": [
          "DeviceServiceDiscover"
        ]
      }
    }, 
    "/api/v0.1/device/service/discover/bulk": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceServiceDiscoverBulkPost", 
        "parameters": [
          {
            "description": "Device Service Discover object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "bulk": {
                  "items": {
                    "$ref": "#/definitions/DeviceServiceDiscoverObject"
                  }, 
                  "type": "array"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceServiceDiscoverObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DeviceServiceDiscoverBulkRoute.post", 
        "tags": [
          "DeviceServiceDiscover"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}": {
      "get": {
        "operationId": "DeviceGetByName", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Device POP", 
            "in": "query", 
            "name": "pop_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "default": true, 
            "description": "Include agent", 
            "in": "query", 
            "name": "include_agent", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "default": false, 
            "description": "Only provide agent based devices", 
            "in": "query", 
            "name": "only_agent", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceObject"
            }
          }
        }, 
        "summary": "DeviceRoute.get", 
        "tags": [
          "Device"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/agent": {
      "post": {
        "description": "Register device agent", 
        "operationId": "DeviceAgentPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Device object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DeviceAgentObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceAgentObject"
            }
          }
        }, 
        "summary": "DeviceAgentRoute.post", 
        "tags": [
          "DeviceAgent"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/agent/inventory": {
      "get": {
        "operationId": "AgentInventoryGetByDevice", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/AgentInventoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "AgentInventoryRoute.get", 
        "tags": [
          "AgentInventory"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/agent/inventory/history": {
      "get": {
        "operationId": "AgentInventoryHistoryGet", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Paginate greater than id", 
            "in": "query", 
            "name": "gt_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Paginate greater than id", 
            "in": "query", 
            "name": "lt_id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Limit results to N records", 
            "in": "query", 
            "name": "limit", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/AgentInventoryHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "AgentInventoryHistoryRoute.get", 
        "tags": [
          "AgentInventoryHistory"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/arp": {
      "get": {
        "operationId": "ArpGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ArpListObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ArpRoute.get", 
        "tags": [
          "Arp"
        ]
      }, 
      "post": {
        "description": "Dispatch real time ARP scan", 
        "operationId": "ArpPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "body", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ArpListObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ArpRoute.post", 
        "tags": [
          "Arp"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/arp/agent": {
      "post": {
        "operationId": "ArpAgentPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Array of ARP objects.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ArpAgentObject"
              }, 
              "type": "array"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ArpAgentObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ArpAgentRoute.post", 
        "tags": [
          "ArpAgent"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/bgp": {
      "get": {
        "operationId": "BgpProcessGetByDevice", 
        "parameters": [
          {
            "description": "BgpProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        }, 
        "summary": "BgpProcessRoute.get", 
        "tags": [
          "BgpProcess"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/bgp/neighbor": {
      "get": {
        "operationId": "BgpNeighborGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceBGPNeighborResponse"
            }
          }
        }, 
        "summary": "BgpNeighborRoute.get", 
        "tags": [
          "BgpNeighbor"
        ]
      }, 
      "post": {
        "description": "Dispatch real time ARP scan", 
        "operationId": "BgpNeighborPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceBGPNeighborResponse"
            }
          }
        }, 
        "summary": "BgpNeighborRoute.post", 
        "tags": [
          "BgpNeighbor"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/bgp/{as_number}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpProcessDelete", 
        "parameters": [
          {
            "description": "BgpProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "BgpProcess as_number", 
            "in": "path", 
            "name": "as_number", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        }, 
        "summary": "BgpProcessRoute.delete", 
        "tags": [
          "BgpProcess"
        ]
      }, 
      "get": {
        "operationId": "BgpProcessGetByAs", 
        "parameters": [
          {
            "description": "BgpProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "BgpProcess as_number", 
            "in": "path", 
            "name": "as_number", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        }, 
        "summary": "BgpProcessRoute.get", 
        "tags": [
          "BgpProcess"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpProcessPut", 
        "parameters": [
          {
            "description": "BgpProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "BgpProcess as_number", 
            "in": "path", 
            "name": "as_number", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "BgpProcess object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpProcessObject"
            }
          }
        }, 
        "summary": "BgpProcessRoute.put", 
        "tags": [
          "BgpProcess"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/bgp/{as_number}/neighbor/{ip_address}/process": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpNeighborProcessDelete", 
        "parameters": [
          {
            "description": "BgpNeighborProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "BgpNeighborProcess as_number", 
            "in": "path", 
            "name": "as_number", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "BgpNeighborProcess ip_address", 
            "in": "path", 
            "name": "ip_address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        }, 
        "summary": "BgpNeighborProcessRoute.delete", 
        "tags": [
          "BgpNeighborProcess"
        ]
      }, 
      "get": {
        "operationId": "BgpNeighborProcessGetByAs", 
        "parameters": [
          {
            "description": "BgpNeighborProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "BgpNeighborProcess as_number", 
            "in": "path", 
            "name": "as_number", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "BgpNeighborProcess ip address", 
            "in": "path", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        }, 
        "summary": "BgpNeighborProcessRoute.get", 
        "tags": [
          "BgpNeighborProcess"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpNeighborProcessPut", 
        "parameters": [
          {
            "description": "BgpNeighborProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "BgpNeighborProcess as_number", 
            "in": "path", 
            "name": "as_number", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "BgpNeighborProcess ip_address", 
            "in": "path", 
            "name": "ip_address", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "BgpNeighborProcess object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpNeighborProcessObject"
            }
          }
        }, 
        "summary": "BgpNeighborProcessRoute.put", 
        "tags": [
          "BgpNeighborProcess"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/bulk/sync": {
      "post": {
        "description": "Dispatch real time bulk Device scan", 
        "operationId": "DeviceBulkSyncPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Array of scan types", 
            "in": "scan_list", 
            "name": "scan_list", 
            "required": true, 
            "type": "array"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DeviceBulkSyncRoute.post", 
        "tags": [
          "DeviceBulk"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/change": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceChangePost", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "type": "string"
          }, 
          {
            "description": "DeviceChange object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DeviceChangeObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceChangeObject"
            }
          }
        }, 
        "summary": "DeviceChangeRoute.post", 
        "tags": [
          "DeviceChange"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/change/history": {
      "get": {
        "operationId": "ChangeHistoryGetByDeviceByDevice", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ChangeHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ChangeHistoryRoute.get", 
        "tags": [
          "ChangeHistory"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/dhcp/helper": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DhcpHelperProcessDelete", 
        "parameters": [
          {
            "description": "DhcpHelperProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DhcpHelperProcess port", 
            "in": "query", 
            "name": "port", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DhcpHelperProcess dst_ipv4_address", 
            "in": "query", 
            "name": "dst_ipv4_address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        }, 
        "summary": "DhcpHelperProcessRoute.delete", 
        "tags": [
          "DhcpHelperProcess"
        ]
      }, 
      "get": {
        "operationId": "DhcpHelperProcessGetByDevice", 
        "parameters": [
          {
            "description": "DhcpHelperProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        }, 
        "summary": "DhcpHelperProcessRoute.get", 
        "tags": [
          "DhcpHelperProcess"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DhcpHelperProcessPut", 
        "parameters": [
          {
            "description": "DhcpHelperProcess device_name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DhcpHelperProcess object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        }, 
        "summary": "DhcpHelperProcessRoute.put", 
        "tags": [
          "DhcpHelperProcess"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/discover": {
      "post": {
        "description": "Dispatch real time Device scan", 
        "operationId": "DevicePost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DeviceRoute.post", 
        "tags": [
          "Device"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/duplicate/ip": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DuplicateIpGetByName", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DuplicateIpObject"
            }
          }
        }, 
        "summary": "DuplicateIpRoute.get", 
        "tags": [
          "DuplicateIp"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/gtm/wideip/alias/config": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "GtmWideIpAliasConfigGet", 
        "parameters": [
          {
            "description": "device name", 
            "in": "path", 
            "name": "device_name", 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/GtmWideIpAliasConfigObject"
            }
          }
        }, 
        "summary": "GtmWideIpAliasConfigRoute.get", 
        "tags": [
          "GtmWideIpAliasConfig"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/hypervisor": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "HypervisorGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "MAC address", 
            "in": "query", 
            "name": "mac_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HypervisorObject"
            }
          }
        }, 
        "summary": "HypervisorRoute.get", 
        "tags": [
          "Hypervisor"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/interface": {
      "get": {
        "operationId": "DeviceInterfaceGet", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DeviceInterfaceRoute.get", 
        "tags": [
          "DeviceInterface"
        ]
      }, 
      "post": {
        "description": "Dispatch real time interface scan", 
        "operationId": "DeviceInterfacePost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceObject"
            }
          }
        }, 
        "summary": "DeviceInterfaceRoute.post", 
        "tags": [
          "DeviceInterface"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/interface/alarm": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceInterfaceAlarmGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceAlarmObject"
            }
          }
        }, 
        "summary": "DeviceInterfaceAlarmRoute.get", 
        "tags": [
          "DeviceInterfaceAlarm"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/interface/{port}": {
      "get": {
        "operationId": "DeviceInterfaceGetByPort", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Device interface port", 
            "in": "path", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DeviceInterfaceRoute.get", 
        "tags": [
          "DeviceInterface"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/ip/interface": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceInterfaceAddressGet", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP Address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceAddressObject"
            }
          }
        }, 
        "summary": "DeviceInterfaceAddressRoute.get", 
        "tags": [
          "DeviceInterfaceAddress"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/lldp/neighbor": {
      "get": {
        "operationId": "LldpNeighborGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Device interface port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/LLDPNeighborObject"
            }
          }
        }, 
        "summary": "LldpNeighborRoute.get", 
        "tags": [
          "LldpNeighbor"
        ]
      }, 
      "post": {
        "description": "Dispatch real time LLDP neighbor scan", 
        "operationId": "LldpNeighborPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/LLDPNeighborObject"
            }
          }
        }, 
        "summary": "LldpNeighborRoute.post", 
        "tags": [
          "LldpNeighbor"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/mac": {
      "get": {
        "operationId": "MacGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Mac Address", 
            "in": "query", 
            "name": "address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "schema": {
                  "$ref": "#/definitions/MacResponse"
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "MacRoute.get", 
        "tags": [
          "Mac"
        ]
      }, 
      "post": {
        "description": "Dispatch real time Mac scan", 
        "operationId": "MacRoute", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "schema": {
                  "$ref": "#/definitions/MacResponse"
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "MacRoute.post", 
        "tags": [
          "Mac"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/ospf/neighbor": {
      "get": {
        "operationId": "OspfNeighborGetByDevice", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Device interface port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/OSPFNeighborObject"
            }
          }
        }, 
        "summary": "OspfNeighborRoute.get", 
        "tags": [
          "OspfNeighbor"
        ]
      }, 
      "post": {
        "description": "Dispatch real time OSPF neighbor scan", 
        "operationId": "OspfNeighborPost", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "OspfNeighborRoute.post", 
        "tags": [
          "OspfNeighbor"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/validate/{validate_name}": {
      "get": {
        "operationId": "DeviceValidateGet", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Validation name", 
            "enum": [
              "bgp", 
              "optics", 
              "power"
            ], 
            "in": "path", 
            "name": "validate_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceValidateObject"
            }
          }
        }, 
        "summary": "DeviceValidateRoute.get", 
        "tags": [
          "DeviceValidate"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/validation/history": {
      "get": {
        "operationId": "ValidationHistoryGetByDevice", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ValidationHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ValidationHistoryRoute.get", 
        "tags": [
          "ValidationHistory"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/vlan/{num}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "VlanDelete", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Vlan number", 
            "in": "path", 
            "name": "num", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        }, 
        "summary": "VlanRoute.delete", 
        "tags": [
          "Vlan"
        ]
      }, 
      "get": {
        "operationId": "VlanGetByNum", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Vlan number", 
            "in": "path", 
            "name": "num", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        }, 
        "summary": "VlanRoute.get", 
        "tags": [
          "Vlan"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "VlanRoutePut", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Vlan number", 
            "in": "path", 
            "name": "num", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "Vlan object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        }, 
        "summary": "VlanRoute.put", 
        "tags": [
          "Vlan"
        ]
      }
    }, 
    "/api/v0.1/device/{device_name}/vlan/{num}/interface": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "VlanInterfaceDelete", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Vlan number", 
            "in": "path", 
            "name": "num", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "VlanInterface port", 
            "in": "query", 
            "name": "port", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        }, 
        "summary": "VlanInterfaceRoute.delete", 
        "tags": [
          "VlanInterface"
        ]
      }, 
      "get": {
        "operationId": "VlanInterfaceGetByNum", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "VlanInterface number", 
            "in": "path", 
            "name": "num", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "VlanInterface port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        }, 
        "summary": "VlanInterfaceRoute.get", 
        "tags": [
          "VlanInterface"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "VlanInterfacePut", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "VlanInterface number", 
            "in": "path", 
            "name": "num", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "VlanInterface port", 
            "in": "query", 
            "name": "port", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "VlanInterface object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        }, 
        "summary": "VlanInterfaceRoute.put", 
        "tags": [
          "VlanInterface"
        ]
      }
    }, 
    "/api/v0.1/device/{name}/service": {
      "get": {
        "operationId": "DeviceServiceGet", 
        "parameters": [
          {
            "description": "DeviceService name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DeviceService Pop name", 
            "in": "query", 
            "name": "pop_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        }, 
        "summary": "DeviceServiceRoute.get", 
        "tags": [
          "DeviceService"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceServicePost", 
        "parameters": [
          {
            "in": "path", 
            "name": "name", 
            "type": "string"
          }, 
          {
            "description": "Service object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        }, 
        "summary": "DeviceServiceRoute.post", 
        "tags": [
          "DeviceService"
        ]
      }
    }, 
    "/api/v0.1/device/{name}/service/discover": {
      "get": {
        "operationId": "DeviceServiceDiscoverGetByName", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP Address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Protocol", 
            "in": "query", 
            "name": "protocol", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceServiceDiscoverObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DeviceServiceDiscoverRoute.get", 
        "tags": [
          "DeviceServiceDiscover"
        ]
      }
    }, 
    "/api/v0.1/device/{name}/service/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceServiceDelete", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        }, 
        "summary": "DeviceServiceRoute.delete", 
        "tags": [
          "DeviceService"
        ]
      }, 
      "get": {
        "operationId": "DeviceServiceGetById", 
        "parameters": [
          {
            "description": "DeviceService name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DeviceService id", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "DeviceService Pop name", 
            "in": "query", 
            "name": "pop_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        }, 
        "summary": "DeviceServiceRoute.get", 
        "tags": [
          "DeviceService"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceServicePut", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "DeviceService object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceServiceObject"
            }
          }
        }, 
        "summary": "DeviceServiceRoute.put", 
        "tags": [
          "DeviceService"
        ]
      }
    }, 
    "/api/v0.1/device/{name}/service/{service_name}/discover": {
      "get": {
        "operationId": "DeviceServiceDiscoverGetByService", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Service name", 
            "in": "path", 
            "name": "service_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP Address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "Protocol", 
            "in": "query", 
            "name": "protocol", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DeviceServiceDiscoverObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DeviceServiceDiscoverRoute.get", 
        "tags": [
          "DeviceServiceDiscover"
        ]
      }
    }, 
    "/api/v0.1/dhcp/helper": {
      "get": {
        "operationId": "DhcpHelperProcessGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        }, 
        "summary": "DhcpHelperProcessRoute.get", 
        "tags": [
          "DhcpHelperProcess"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DhcpHelperProcessPost", 
        "parameters": [
          {
            "description": "DhcpHelperProcess object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DhcpHelperProcessObject"
            }
          }
        }, 
        "summary": "DhcpHelperProcessRoute.post", 
        "tags": [
          "DhcpHelperProcess"
        ]
      }
    }, 
    "/api/v0.1/dns/record/a": {
      "get": {
        "operationId": "DnsARecordGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsARecordRoute.get", 
        "tags": [
          "DnsARecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsARecordPost", 
        "parameters": [
          {
            "description": "Dns object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ip": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }, 
                "view": {
                  "type": "string"
                }, 
                "zone": {
                  "type": "string"
                }
              }, 
              "required": [
                "fqdn", 
                "ip"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsARecordRoute.post", 
        "tags": [
          "DnsARecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/a/{fqdn}/{ip}": {
      "delete": {
        "operationId": "DnsARecordDelete", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsARecordRoute.delete", 
        "tags": [
          "DnsARecord"
        ]
      }, 
      "get": {
        "operationId": "DnsARecordGetByIp", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsARecordRoute.get", 
        "tags": [
          "DnsARecord"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsARecordPut", 
        "parameters": [
          {
            "description": "ip", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Dns object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ip": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsARecordRoute.put", 
        "tags": [
          "DnsARecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/aaaa": {
      "get": {
        "operationId": "DnsAAAARecordGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsAAAARecordRoute.get", 
        "tags": [
          "DnsAAAARecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsAAAARecordPost", 
        "parameters": [
          {
            "description": "Dns object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ip": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }, 
                "view": {
                  "type": "string"
                }, 
                "zone": {
                  "type": "string"
                }
              }, 
              "required": [
                "fqdn", 
                "ip"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsAAAARecordRoute.post", 
        "tags": [
          "DnsAAAARecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/aaaa/{fqdn}/{ip}": {
      "delete": {
        "operationId": "DnsAAAARecordDelete", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsAAAARecordRoute.delete", 
        "tags": [
          "DnsAAAARecord"
        ]
      }, 
      "get": {
        "operationId": "DnsAAAARecordGetByIp", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsAAAARecordRoute.get", 
        "tags": [
          "DnsAAAARecord"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsAAAARecordPut", 
        "parameters": [
          {
            "description": "ip", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Dns object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ip": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsAAAARecordRoute.put", 
        "tags": [
          "DnsAAAARecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/cname": {
      "get": {
        "operationId": "DnsCNAMERecordGet", 
        "parameters": [
          {
            "description": "canonical name", 
            "in": "query", 
            "name": "canonical", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsCNAMERecordRoute.get", 
        "tags": [
          "DnsCNAMERecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsCNAMERecordPost", 
        "parameters": [
          {
            "description": "Dns CNAME object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "canonical": {
                  "type": "string"
                }, 
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }, 
                "view": {
                  "type": "string"
                }, 
                "zone": {
                  "type": "string"
                }
              }, 
              "required": [
                "fqdn", 
                "canonical"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsCNAMERecordRoute.post", 
        "tags": [
          "DnsCNAMERecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/cname/{fqdn}": {
      "delete": {
        "operationId": "DnsCNAMERecordDelete", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsCNAMERecordRoute.delete", 
        "tags": [
          "DnsCNAMERecord"
        ]
      }, 
      "get": {
        "operationId": "DnsCNAMERecordGetByFQDN", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "canonical name", 
            "in": "query", 
            "name": "canonical", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsCNAMERecordRoute.get", 
        "tags": [
          "DnsCNAMERecord"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsCNAMERecordPut", 
        "parameters": [
          {
            "description": "ip", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "canonical", 
            "in": "path", 
            "name": "canonical", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Dns object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "canonical": {
                  "type": "string"
                }, 
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsCNAMERecordRoute.put", 
        "tags": [
          "DnsCNAMERecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/host": {
      "get": {
        "operationId": "DnsHOSTRecordGet", 
        "parameters": [
          {
            "description": "ipv4 address", 
            "in": "query", 
            "name": "ipv4addr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ipv6 address", 
            "in": "query", 
            "name": "ipv6addr", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsHOSTRecordRoute.get", 
        "tags": [
          "DnsHOSTRecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsHOSTRecordPost", 
        "parameters": [
          {
            "description": "Dns HOST object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ipv4addrs": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "ipv6addrs": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "ttl": {
                  "type": "integer"
                }, 
                "view": {
                  "type": "string"
                }, 
                "zone": {
                  "type": "string"
                }
              }, 
              "required": [
                "fqdn", 
                "ipv4addrs"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsHOSTRecordRoute.post", 
        "tags": [
          "DnsHOSTRecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/host/{fqdn}": {
      "delete": {
        "operationId": "DnsHostRecordDelete", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsHOSTRecordRoute.delete", 
        "tags": [
          "DnsHOSTRecord"
        ]
      }, 
      "get": {
        "operationId": "DnsHOSTRecordGetByFQDN", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ipv4 address", 
            "in": "query", 
            "name": "ipv4addr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ipv6 address", 
            "in": "query", 
            "name": "ipv6addr", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsHOSTRecordRoute.get", 
        "tags": [
          "DnsHOSTRecord"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsHOSTRecordPut", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Dns object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ipv4addrs": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "ipv6addrs": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "ttl": {
                  "type": "integer"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsHOSTRecordRoute.put", 
        "tags": [
          "DnsHOSTRecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/ptr": {
      "get": {
        "operationId": "DnsPTRRecordGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsPTRRecordRoute.get", 
        "tags": [
          "DnsPTRRecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsPTRRecordPost", 
        "parameters": [
          {
            "description": "Dns object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ip": {
                  "type": "string"
                }, 
                "ttl": {
                  "type": "integer"
                }, 
                "view": {
                  "type": "string"
                }, 
                "zone": {
                  "type": "string"
                }
              }, 
              "required": [
                "fqdn", 
                "ip"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsPTRRecordRoute.post", 
        "tags": [
          "DnsPTRRecord"
        ]
      }
    }, 
    "/api/v0.1/dns/record/ptr/{fqdn}/{ip}": {
      "delete": {
        "operationId": "DnsPTRRecordDelete", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsPTRRecordRoute.delete", 
        "tags": [
          "DnsPTRRecord"
        ]
      }, 
      "get": {
        "operationId": "DnsPTRRecordGetByIp", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "fqdn", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsPTRRecordRoute.get", 
        "tags": [
          "DnsPTRRecord"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsPTRRecordPut", 
        "parameters": [
          {
            "description": "ip", 
            "in": "path", 
            "name": "fqdn", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip", 
            "in": "path", 
            "name": "ip", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Dns object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "ip": {
                  "type": "string"
                }, 
                "view": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "DnsPTRRecordRoute.put", 
        "tags": [
          "DnsPTRRecord"
        ]
      }
    }, 
    "/api/v0.1/dns/zone/reverse": {
      "delete": {
        "operationId": "DnsReverseZoneDelete", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DnsZoneResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DnsReverseZoneRoute.delete", 
        "tags": [
          "DnsReverseZone"
        ]
      }, 
      "get": {
        "operationId": "DnsReverseRecordGet", 
        "parameters": [
          {
            "description": "cidr", 
            "in": "query", 
            "name": "cidr", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "dns view", 
            "in": "query", 
            "name": "view", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DnsZoneResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DnsReverseRecordRoute.get", 
        "tags": [
          "DnsHOSTRecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DnsReverseZonePost", 
        "parameters": [
          {
            "description": "Dns HOST object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "cidr": {
                  "type": "string"
                }, 
                "view": {
                  "type": "string"
                }
              }, 
              "required": [
                "cidr"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DnsZoneResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DnsReverseZoneRoute.post", 
        "tags": [
          "DnsReverseZone"
        ]
      }
    }, 
    "/api/v0.1/dns/zone/reverse/{cidr}": {
      "delete": {
        "operationId": "DnsReverseZoneDeleteByCIDR", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "cidr", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/DnsZoneResponse"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "DnsReverseZoneRoute.delete", 
        "tags": [
          "DnsReverseZone"
        ]
      }
    }, 
    "/api/v0.1/dns2/record/{zone}/{name}": {
      "delete": {
        "operationId": "Dns2ARecordDelete", 
        "parameters": [
          {
            "description": "zone for record", 
            "in": "path", 
            "name": "zone", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name for fqdn", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsRecordObject"
            }
          }
        }, 
        "summary": "Dns2ARecordRoute.delete", 
        "tags": [
          "Dns2ARecord"
        ]
      }, 
      "get": {
        "operationId": "Dns2ARecordGet", 
        "parameters": [
          {
            "description": "fqdn", 
            "in": "path", 
            "name": "zone", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsRecordObject"
            }
          }
        }, 
        "summary": "Dns2ARecordRoute.get", 
        "tags": [
          "Dns2ARecord"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "Dns2RecordPost", 
        "parameters": [
          {
            "in": "path", 
            "name": "zone", 
            "required": true, 
            "type": "string"
          }, 
          {
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsRecordObject"
            }
          }
        }, 
        "summary": "Dns2RecordRoute.post", 
        "tags": [
          "Dns2Record"
        ]
      }
    }, 
    "/api/v0.1/dns2/record/{zone}/{name}/{type}/{ip}": {
      "delete": {
        "operationId": "Dns2ARecordDeleteByIp", 
        "parameters": [
          {
            "description": "zone for record", 
            "in": "path", 
            "name": "zone", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "name for fqdn", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "type of record to delete", 
            "in": "path", 
            "name": "type", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ip address", 
            "in": "path", 
            "name": "ip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsRecordObject"
            }
          }
        }, 
        "summary": "Dns2ARecordRoute.delete", 
        "tags": [
          "Dns2ARecord"
        ]
      }
    }, 
    "/api/v0.1/dns2/zone": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "Dns2ZoneRouteGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsZoneObject"
            }
          }
        }, 
        "summary": "Dns2ZoneRoute.get", 
        "tags": [
          "Dns2Zone"
        ]
      }
    }, 
    "/api/v0.1/dns2/zone/{zone_id}": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "Dns2ZoneRouteGetById", 
        "parameters": [
          {
            "in": "path", 
            "name": "zone_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsZoneObject"
            }
          }
        }, 
        "summary": "Dns2ZoneRoute.get", 
        "tags": [
          "Dns2Zone"
        ]
      }
    }, 
    "/api/v0.1/dns2/zone/{zone_id}/records": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "Dns2ZoneRecordGet", 
        "parameters": [
          {
            "in": "path", 
            "name": "zone_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DnsZoneRecordObject"
            }
          }
        }, 
        "summary": "Dns2ZoneRecordRoute.get", 
        "tags": [
          "Dns2ZoneRecord"
        ]
      }
    }, 
    "/api/v0.1/duplicate/ip": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DuplicateIpGet", 
        "parameters": [
          {
            "description": "IP address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DuplicateIpObject"
            }
          }
        }, 
        "summary": "DuplicateIpRoute.get", 
        "tags": [
          "DuplicateIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/dc": {
      "get": {
        "operationId": "GtmGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/dc/{hostname}": {
      "get": {
        "operationId": "GtmGetByName", 
        "parameters": [
          {
            "description": "datacenter name", 
            "in": "path", 
            "name": "hostname", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/geoip/{hostname}": {
      "get": {
        "operationId": "GtmGeoIpGet", 
        "parameters": [
          {
            "description": "GTM FQDN", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmGeoIpRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }, 
      "post": {
        "operationId": "GtmGeoIpPost", 
        "parameters": [
          {
            "description": "GTM FQDN", 
            "in": "path", 
            "name": "hostname", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmGeoIpRoute.post", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/region": {
      "get": {
        "operationId": "GtmRegionGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmRegionRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/region/resolve/{country}": {
      "get": {
        "operationId": "GtmRegionResolveGet", 
        "parameters": [
          {
            "description": "2-letter Country code", 
            "in": "path", 
            "name": "country", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmRegionResolveRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/region/resolve/{country}/{state}": {
      "get": {
        "operationId": "GtmRegionGetResolveByState", 
        "parameters": [
          {
            "description": "2-letter Country code", 
            "in": "path", 
            "name": "country", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "optional State or Province name", 
            "in": "path", 
            "name": "state", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmRegionResolveRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/topo": {
      "get": {
        "operationId": "GtmTopologyGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmTopologyRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/topo/create": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Create a new topology record", 
        "operationId": "GtmTopologyPost", 
        "parameters": [
          {
            "description": "topo object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                }, 
                "ldns_target": {
                  "type": "string"
                }, 
                "ldns_type": {
                  "type": "string"
                }, 
                "score": {
                  "type": "integer"
                }, 
                "server_target": {
                  "type": "string"
                }, 
                "server_type": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "schema": {
                "properties": {
                  "kind": {
                    "type": "string"
                  }, 
                  "name": {
                    "type": "string"
                  }, 
                  "score": {
                    "type": "string"
                  }
                }
              }, 
              "type": "object"
            }
          }
        }, 
        "summary": "GtmTopologyRoute.post", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/topo/delete": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "Remove topology record", 
        "operationId": "GtmTopologyDelete", 
        "parameters": [
          {
            "description": "topo object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                }, 
                "ldns_target": {
                  "type": "string"
                }, 
                "ldns_type": {
                  "type": "string"
                }, 
                "server_target": {
                  "type": "string"
                }, 
                "server_type": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "properties": {
                "description": {
                  "type": "string"
                }, 
                "ldns_target": {
                  "type": "string"
                }, 
                "ldns_type": {
                  "type": "string"
                }, 
                "server_target": {
                  "type": "string"
                }, 
                "server_type": {
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        }, 
        "summary": "GtmTopologyRoute.delete", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/wideip": {
      "get": {
        "operationId": "GtmWideIpGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmWideIpRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/gtm/wideip/{wideip}": {
      "get": {
        "operationId": "GtmWideIpGetByIp", 
        "parameters": [
          {
            "description": "wideip hostname", 
            "in": "path", 
            "name": "wideip", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "GtmWideIpRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/host/bgp/neighbor": {
      "get": {
        "operationId": "HostBgpNeighborGet", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Application name", 
            "in": "query", 
            "name": "application", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborRoute.get", 
        "tags": [
          "HostBgpNeighbor"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "HostBgpNeighborPost", 
        "parameters": [
          {
            "description": "Host BGP Neighbor object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborRoute.post", 
        "tags": [
          "HostBgpNeighbor"
        ]
      }
    }, 
    "/api/v0.1/host/bgp/neighbor/device/{device_name}/application/{application}": {
      "delete": {
        "operationId": "HostBgpNeighborDelete", 
        "parameters": [
          {
            "description": "Device name FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Application name", 
            "in": "path", 
            "name": "application", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "HostBgpNeighbor UUIDv1 id", 
            "in": "query", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborRoute.delete", 
        "tags": [
          "HostBgpNeighbor"
        ]
      }, 
      "put": {
        "operationId": "HostBgpNeighborPut", 
        "parameters": [
          {
            "description": "Device name FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Application name", 
            "in": "path", 
            "name": "application", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "HostBgpNeighbor UUIDv1 id", 
            "in": "query", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborRoute.put", 
        "tags": [
          "HostBgpNeighbor"
        ]
      }
    }, 
    "/api/v0.1/host/bgp/neighbor/prefix": {
      "get": {
        "operationId": "HostBgpNeighborPrefixGet", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IPv4 or IPv6 prefix", 
            "in": "query", 
            "name": "prefix", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/HostBgpNeighborPrefixObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "HostBgpNeighborPrefixRoute.get", 
        "tags": [
          "HostBgpNeighborPrefix"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "HostBgpNeighborPrefixPost", 
        "parameters": [
          {
            "description": "Host BGP Neighbor Prefix object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborPrefixObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborPrefixObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborPrefixRoute.post", 
        "tags": [
          "HostBgpNeighborPrefix"
        ]
      }
    }, 
    "/api/v0.1/host/bgp/neighbor/prefix/device/{device_name}": {
      "delete": {
        "operationId": "HostBgpNeighborPrefixDelete", 
        "parameters": [
          {
            "description": "Device name FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IP Prefix", 
            "in": "query", 
            "name": "prefix", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "HostBgpNeighborPrefix UUIDv1 id", 
            "in": "query", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "HostBgpNeighbor UUIDv1 id", 
            "in": "query", 
            "name": "neighbor_id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborPrefixObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborPrefixRoute.delete", 
        "tags": [
          "HostBgpNeighborPrefix"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "HostBgpNeighborPrefixPut", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Application name", 
            "in": "path", 
            "name": "application", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Host BGP Neighbor Prefix object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborPrefixObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HostBgpNeighborPrefixObject"
            }
          }
        }, 
        "summary": "HostBgpNeighborPrefixRoute.put", 
        "tags": [
          "HostBgpNeighborPrefix"
        ]
      }
    }, 
    "/api/v0.1/hypervisor": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "HypervisorGet", 
        "parameters": [
          {
            "description": "MAC address", 
            "in": "query", 
            "name": "mac_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/HypervisorObject"
            }
          }
        }, 
        "summary": "HypervisorRoute.get", 
        "tags": [
          "Hypervisor"
        ]
      }
    }, 
    "/api/v0.1/interface/alarm": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceInterfaceAlarmGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceAlarmObject"
            }
          }
        }, 
        "summary": "DeviceInterfaceAlarmRoute.get", 
        "tags": [
          "DeviceInterfaceAlarm"
        ]
      }
    }, 
    "/api/v0.1/ip/interface": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DeviceInterfaceAddressGet", 
        "parameters": [
          {
            "description": "Device FQDN", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP Address", 
            "in": "query", 
            "name": "ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DeviceInterfaceAddressObject"
            }
          }
        }, 
        "summary": "DeviceInterfaceAddressRoute.get", 
        "tags": [
          "DeviceInterfaceAddress"
        ]
      }
    }, 
    "/api/v0.1/ipam/geo/feed.csv": {
      "delete": {
        "operationId": "IpamGeoFeedDelete", 
        "responses": {
          "200": {
            "description": "The resource was deleted successfully"
          }
        }, 
        "summary": "IpamGeoFeedRoute.delete", 
        "tags": [
          "IpamGeoFeed"
        ]
      }, 
      "get": {
        "operationId": "IpamGeoFeedGet", 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "IpamGeoFeedRoute.get", 
        "tags": [
          "IpamGeoFeed"
        ]
      }
    }, 
    "/api/v0.1/ipam/geo/provider": {
      "get": {
        "operationId": "IpamGeoProviderGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "type": "string"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "IpamGeoProviderRoute.get", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/ipam/geo/provider/{name}/resolve/{ip}": {
      "post": {
        "operationId": "IpamGeoProviderPost", 
        "parameters": [
          {
            "description": "GeoIp provider name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip", 
            "in": "path", 
            "name": "ip", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP or CIDR to resolve", 
            "in": "path", 
            "name": "network", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "IpamGeoProviderRoute.post", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/ipam/geo/provider/{name}/resolve/{ip}/{network}": {
      "post": {
        "operationId": "IpamGeoProviderPostByNetwork", 
        "parameters": [
          {
            "description": "GeoIp provider name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "ip", 
            "in": "path", 
            "name": "ip", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IP or CIDR to resolve", 
            "in": "path", 
            "name": "network", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "IpamGeoProviderRoute.post", 
        "tags": [
          "IpamGeoIp"
        ]
      }
    }, 
    "/api/v0.1/ipam/pool": {
      "get": {
        "operationId": "IpamPoolGet", 
        "parameters": [
          {
            "description": "IPAM pool id", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "IPAM pool name", 
            "in": "query", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IPAM pool text", 
            "in": "query", 
            "name": "text", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IPAM pool tags", 
            "in": "query", 
            "name": "tags", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IPAM pool max result", 
            "in": "query", 
            "name": "max_result", 
            "required": false, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IPAMPoolResponse"
            }
          }
        }, 
        "summary": "IpamPoolRoute.get", 
        "tags": [
          "IpamPool"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamPoolPost", 
        "parameters": [
          {
            "description": "IPAM Pool object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/IPAMPool"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IPAMPoolResponse"
            }
          }
        }, 
        "summary": "IpamPoolRoute.post", 
        "tags": [
          "IpamPool"
        ]
      }
    }, 
    "/api/v0.1/ipam/pool/cache": {
      "get": {
        "operationId": "IpamPoolCacheGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IPAMPoolResponse"
            }
          }
        }, 
        "summary": "IpamPoolCacheRoute.get", 
        "tags": [
          "IpamPoolCache"
        ]
      }
    }, 
    "/api/v0.1/ipam/pool/{id}": {
      "delete": {
        "operationId": "IpamPoolDelete", 
        "parameters": [
          {
            "description": "IPAM pool id", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IPAMPoolResponse"
            }
          }
        }, 
        "summary": "IpamPoolRoute.delete", 
        "tags": [
          "IpamPool"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamPoolPut", 
        "parameters": [
          {
            "description": "IPAM pool id", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "IPAM Pool object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/IPAMPool"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IPAMPoolResponse"
            }
          }
        }, 
        "summary": "IpamPoolRoute.put", 
        "tags": [
          "IpamPool"
        ]
      }
    }, 
    "/api/v0.1/ipam/prefix": {
      "get": {
        "operationId": "IpamPrefixGet", 
        "parameters": [
          {
            "description": "IPAM prefix IP family", 
            "in": "query", 
            "name": "family", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "IPAM prefix is_exact match", 
            "in": "query", 
            "name": "is_exact", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "IPAM prefix is_indent", 
            "in": "query", 
            "name": "is_indent", 
            "required": false, 
            "type": "boolean"
          }, 
          {
            "description": "IPAM prefix text", 
            "in": "query", 
            "name": "text", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IPAM prefix tags", 
            "in": "query", 
            "name": "tags", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IPAM prefix max result", 
            "in": "query", 
            "name": "max_result", 
            "required": false, 
            "type": "integer"
          }, 
          {
            "description": "IPAM prefix", 
            "in": "query", 
            "name": "prefix", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK", 
            "schema": {
              "items": {
                "$ref": "#/definitions/prefix"
              }, 
              "type": "array"
            }
          }, 
          "401": {
            "description": "Unauthorized", 
            "schema": {
              "$ref": "#/definitions/error"
            }
          }, 
          "default": {
            "description": "Unknown Error", 
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }, 
        "security": [
          {
            "ApiKey": []
          }
        ], 
        "summary": "IpamPrefixRoute.get", 
        "tags": [
          "IpamPrefix"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamPrefixPost", 
        "parameters": [
          {
            "description": "IPAM Prefix object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "description": {
                  "type": "string"
                }, 
                "node": {
                  "type": "string"
                }, 
                "pool": {
                  "type": "string"
                }, 
                "prefix": {
                  "type": "string"
                }, 
                "status": {
                  "type": "string"
                }, 
                "tags_list": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "type": {
                  "type": "string"
                }, 
                "vlan": {
                  "type": "integer"
                }
              }, 
              "required": [
                "name"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/prefix"
            }
          }
        }, 
        "summary": "IpamPrefixRoute.post", 
        "tags": [
          "IpamPrefix"
        ]
      }
    }, 
    "/api/v0.1/ipam/prefix/cache": {
      "get": {
        "operationId": "IpamPrefixCacheGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/prefix"
            }
          }
        }, 
        "summary": "IpamPrefixCacheRoute.get", 
        "tags": [
          "IpamPrefixCache"
        ]
      }
    }, 
    "/api/v0.1/ipam/prefix/request": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamPrefixRequestPost", 
        "parameters": [
          {
            "description": "IPAM Prefix Request object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "description": {
                  "type": "string"
                }, 
                "family": {
                  "default": 4, 
                  "enum": [
                    4, 
                    6
                  ], 
                  "type": "integer"
                }, 
                "is_from_pool": {
                  "type": "boolean"
                }, 
                "is_from_prefix": {
                  "type": "boolean"
                }, 
                "node": {
                  "type": "string"
                }, 
                "parent_pool": {
                  "type": "string"
                }, 
                "pool": {
                  "type": "string"
                }, 
                "prefix": {
                  "type": "string"
                }, 
                "prefix_length": {
                  "type": "integer"
                }, 
                "status": {
                  "default": "assigned", 
                  "enum": [
                    "assigned", 
                    "reserved", 
                    "quarantine"
                  ], 
                  "type": "string"
                }, 
                "tags": {
                  "type": "string"
                }, 
                "tags_list": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "type": {
                  "enum": [
                    "reservation", 
                    "assignment", 
                    "host"
                  ], 
                  "type": "string"
                }, 
                "vlan": {
                  "type": "integer"
                }
              }, 
              "required": [
                "type"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/prefix"
            }
          }
        }, 
        "summary": "IpamPrefixRequestRoute.post", 
        "tags": [
          "IpamPrefixRequest"
        ]
      }
    }, 
    "/api/v0.1/ipam/prefix/request/nextip": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamRequestNextIPPost", 
        "parameters": [
          {
            "description": "IPAM Request Next IP object.", 
            "in": "body", 
            "name": "nextIpRequest", 
            "schema": {
              "properties": {
                "family": {
                  "default": 4, 
                  "enum": [
                    4, 
                    6
                  ], 
                  "type": "integer"
                }, 
                "fqdn": {
                  "type": "string"
                }, 
                "pop_name": {
                  "type": "string"
                }, 
                "vlan_name": {
                  "type": "string"
                }
              }, 
              "required": [
                "pop_name", 
                "vlan_name", 
                "fqdn"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/prefix"
            }
          }
        }, 
        "summary": "IpamRequestNextIPRoute.post", 
        "tags": [
          "IpamNextIP"
        ]
      }
    }, 
    "/api/v0.1/ipam/prefix/utilization": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamUtilizationPost", 
        "parameters": [
          {
            "in": "query", 
            "name": "prefix", 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpamUtilizationObject"
            }
          }
        }, 
        "summary": "IpamUtilizationRoute.post", 
        "tags": [
          "IpamUtilization"
        ]
      }
    }, 
    "/api/v0.1/ipam/prefix/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "description": "Delete a IPAM Prefix object.", 
        "operationId": "IpamPrefixDelete", 
        "parameters": [
          {
            "description": "IPAM Prefix id.", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "Delete child prefixes as well", 
            "in": "query", 
            "name": "recursive", 
            "required": false, 
            "type": "boolean"
          }
        ], 
        "responses": {
          "200": {
            "description": "OK"
          }
        }, 
        "summary": "IpamPrefixRoute.delete", 
        "tags": [
          "IpamPrefix"
        ]
      }, 
      "get": {
        "operationId": "IpamPrefixGetById", 
        "parameters": [
          {
            "description": "IPAM prefix id", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/prefix"
            }
          }
        }, 
        "summary": "IpamPrefixRoute.get", 
        "tags": [
          "IpamPrefix"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamPrefixPut", 
        "parameters": [
          {
            "description": "IPAM Prefix id.", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "IPAM Prefix object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "comment": {
                  "type": "string"
                }, 
                "description": {
                  "type": "string"
                }, 
                "node": {
                  "type": "string"
                }, 
                "pool": {
                  "type": "string"
                }, 
                "prefix": {
                  "type": "string"
                }, 
                "status": {
                  "type": "string"
                }, 
                "tags": {
                  "type": "string"
                }, 
                "tags_list": {
                  "items": {
                    "type": "string"
                  }, 
                  "type": "array"
                }, 
                "type": {
                  "type": "string"
                }, 
                "vlan": {
                  "type": "integer"
                }, 
                "xtags": {
                  "type": "string"
                }
              }, 
              "required": [
                "name"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/prefix"
            }
          }
        }, 
        "summary": "IpamPrefixRoute.put", 
        "tags": [
          "IpamPrefix"
        ]
      }
    }, 
    "/api/v0.1/ipam/profile/{name}": {
      "get": {
        "operationId": "IpamPoolGet", 
        "parameters": [
          {
            "description": "IPAM profile name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "IpamPoolRoute.get", 
        "tags": [
          "IpamProfile"
        ]
      }
    }, 
    "/api/v0.1/ipam/profile/{name}/deploy": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamProfileDeployPost", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IPAM Profile object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "name": {
                  "type": "string"
                }, 
                "region": {
                  "type": "string"
                }
              }, 
              "required": [
                "location", 
                "region"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "IpamProfileDeployRoute.post", 
        "tags": [
          "IpamProfile"
        ]
      }
    }, 
    "/api/v0.1/ipam/profile/{name}/revert": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpamProfileRevertPost", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IPAM Profile object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "name": {
                  "type": "string"
                }, 
                "region": {
                  "type": "string"
                }
              }, 
              "required": [
                "location", 
                "region"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "IpamProfileRevertRoute.post", 
        "tags": [
          "IpamProfile"
        ]
      }
    }, 
    "/api/v0.1/ipfilter": {
      "get": {
        "operationId": "IpFilterGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        }, 
        "summary": "IpFilterRoute.get", 
        "tags": [
          "IpFilter"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpFilterPost", 
        "parameters": [
          {
            "description": "IpFilter object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        }, 
        "summary": "IpFilterRoute.post", 
        "tags": [
          "IpFilter"
        ]
      }
    }, 
    "/api/v0.1/ipfilter/rule": {
      "get": {
        "operationId": "IpFilterRuleGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        }, 
        "summary": "IpFilterRuleRoute.get", 
        "tags": [
          "IpFilterRule"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpFilterRulePost", 
        "parameters": [
          {
            "description": "IpFilterRule object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        }, 
        "summary": "IpFilterRuleRoute.post", 
        "tags": [
          "IpFilterRule"
        ]
      }
    }, 
    "/api/v0.1/ipfilter/{ip_filter_id}/rule": {
      "get": {
        "operationId": "IpFilterRuleGetById", 
        "parameters": [
          {
            "description": "IpFilter id", 
            "in": "path", 
            "name": "ip_filter_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        }, 
        "summary": "IpFilterRuleRoute.get", 
        "tags": [
          "IpFilterRule"
        ]
      }
    }, 
    "/api/v0.1/ipfilter/{ip_filter_id}/rule/{id}/seq/{seq}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpFilterRuleDelete", 
        "parameters": [
          {
            "description": "IpFilter id name", 
            "in": "path", 
            "name": "ip_filter_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "seq", 
            "in": "path", 
            "name": "seq", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        }, 
        "summary": "IpFilterRuleRoute.delete", 
        "tags": [
          "IpFilterRule"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpFilterRulePut", 
        "parameters": [
          {
            "description": "IpFilterRule id", 
            "in": "path", 
            "name": "ip_filter_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "seq", 
            "in": "path", 
            "name": "seq", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "IpFilterRule object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterRuleObject"
            }
          }
        }, 
        "summary": "IpFilterRuleRoute.put", 
        "tags": [
          "IpFilterRule"
        ]
      }
    }, 
    "/api/v0.1/ipfilter/{name}": {
      "get": {
        "operationId": "IpFilterGetByName", 
        "parameters": [
          {
            "description": "IpFilter name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        }, 
        "summary": "IpFilterRoute.get", 
        "tags": [
          "IpFilter"
        ]
      }
    }, 
    "/api/v0.1/ipfilter/{name}/id/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpFilterDelete", 
        "parameters": [
          {
            "description": "IpFilter name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        }, 
        "summary": "IpFilterRoute.delete", 
        "tags": [
          "IpFilter"
        ]
      }, 
      "get": {
        "operationId": "IpFilterGetById", 
        "parameters": [
          {
            "description": "IpFilter name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "IpFilter id", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        }, 
        "summary": "IpFilterRoute.get", 
        "tags": [
          "IpFilter"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "IpFilterPut", 
        "parameters": [
          {
            "description": "IpFilter name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "IpFilter object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/IpFilterObject"
            }
          }
        }, 
        "summary": "IpFilterRoute.put", 
        "tags": [
          "IpFilter"
        ]
      }
    }, 
    "/api/v0.1/lldp/neighbor": {
      "get": {
        "operationId": "LldpNeighborGet", 
        "parameters": [
          {
            "description": "Device interface port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/LLDPNeighborObject"
            }
          }
        }, 
        "summary": "LldpNeighborRoute.get", 
        "tags": [
          "LldpNeighbor"
        ]
      }
    }, 
    "/api/v0.1/login": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "LoginPost", 
        "parameters": [
          {
            "description": "Login object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/LoginObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/LoginObject"
            }
          }
        }, 
        "summary": "LoginRoute.post", 
        "tags": [
          "Login"
        ]
      }
    }, 
    "/api/v0.1/mac": {
      "get": {
        "operationId": "MacGet", 
        "parameters": [
          {
            "description": "Mac Address", 
            "in": "query", 
            "name": "address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "schema": {
                  "$ref": "#/definitions/MacResponse"
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "MacRoute.get", 
        "tags": [
          "Mac"
        ]
      }
    }, 
    "/api/v0.1/mac/{address}": {
      "get": {
        "operationId": "MacGetByAddress", 
        "parameters": [
          {
            "description": "address", 
            "in": "path", 
            "name": "address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Mac Address", 
            "in": "query", 
            "name": "address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "schema": {
                  "$ref": "#/definitions/MacResponse"
                }
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "MacRoute.get", 
        "tags": [
          "Mac"
        ]
      }
    }, 
    "/api/v0.1/monitoring/duplicate/ip": {
      "get": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "DuplicateIpMonitoringGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/DuplicateIpMonitoringObject"
            }
          }
        }, 
        "summary": "DuplicateIpMonitoringRoute.get", 
        "tags": [
          "DuplicateIpMonitoring"
        ]
      }
    }, 
    "/api/v0.1/ospf/neighbor": {
      "get": {
        "operationId": "OspfNeighborGet", 
        "parameters": [
          {
            "description": "Device interface port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/OSPFNeighborObject"
            }
          }
        }, 
        "summary": "OspfNeighborRoute.get", 
        "tags": [
          "OspfNeighbor"
        ]
      }
    }, 
    "/api/v0.1/pop": {
      "get": {
        "operationId": "PopGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/pop"
              }, 
              "type": "array"
            }
          }, 
          "default": {
            "description": "Unknown Error", 
            "schema": {
              "$ref": "#/definitions/error"
            }
          }
        }, 
        "security": [], 
        "summary": "PopRoute.get", 
        "tags": [
          "Pop"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "PopPost", 
        "parameters": [
          {
            "description": "Pop object.", 
            "in": "body", 
            "name": "pop", 
            "schema": {
              "properties": {
                "address": {
                  "type": "string"
                }, 
                "airport_code": {
                  "type": "string"
                }, 
                "country_code": {
                  "type": "string"
                }, 
                "description": {
                  "type": "string"
                }, 
                "latitude": {
                  "type": "number"
                }, 
                "longitude": {
                  "type": "number"
                }, 
                "name": {
                  "type": "string"
                }, 
                "status": {
                  "type": "string"
                }, 
                "vendor": {
                  "type": "string"
                }
              }, 
              "required": [
                "name", 
                "airport_code", 
                "country_code", 
                "status"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopRoute.post", 
        "tags": [
          "Pop"
        ]
      }
    }, 
    "/api/v0.1/pop/{name}": {
      "delete": {
        "operationId": "PopDelete", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopRoute.delete", 
        "tags": [
          "Pop"
        ]
      }, 
      "get": {
        "operationId": "PopGetByName", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/pop"
              }, 
              "type": "array"
            }
          }
        }, 
        "security": [], 
        "summary": "PopRoute.get", 
        "tags": [
          "Pop"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "PopPut", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Pop object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/pop"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopRoute.put", 
        "tags": [
          "Pop"
        ]
      }
    }, 
    "/api/v0.1/pop/{name}/metadata": {
      "delete": {
        "operationId": "PopMetadataDelete", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopMetadataRoute.delete", 
        "tags": [
          "PopMetadata"
        ]
      }, 
      "get": {
        "operationId": "PopMetadataGet", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopMetadataRoute.get", 
        "tags": [
          "PopMetadata"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "PopMetadataPost", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Pop metadata object.", 
            "in": "body", 
            "name": "PopParameters", 
            "schema": {
              "properties": {
                "metadata": {
                  "description": "Pop metadata object.", 
                  "example": {
                    "cluster_config": [
                      "127.0.0.1", 
                      "127.0.0.2"
                    ]
                  }, 
                  "type": "object"
                }
              }, 
              "required": [
                "metadata"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopMetadataRoute.post", 
        "tags": [
          "PopMetadata"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "PopMetadataPut", 
        "parameters": [
          {
            "description": "Pop name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Pop metadata object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "metadata": {
                  "description": "Pop metadata object.", 
                  "example": {
                    "cluster_config": [
                      "127.0.0.3", 
                      "127.0.0.4"
                    ]
                  }, 
                  "type": "string"
                }
              }, 
              "required": [
                "metadata"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "PopMetadataRoute.put", 
        "tags": [
          "PopMetadata"
        ]
      }
    }, 
    "/api/v0.1/routemap": {
      "get": {
        "operationId": "RouteMapGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        }, 
        "summary": "RouteMapRoute.get", 
        "tags": [
          "RouteMap"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "RouteMapPost", 
        "parameters": [
          {
            "description": "RouteMap object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        }, 
        "summary": "RouteMapRoute.post", 
        "tags": [
          "RouteMap"
        ]
      }
    }, 
    "/api/v0.1/routemap/bgp": {
      "get": {
        "operationId": "BgpRouteMapGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        }, 
        "summary": "BgpRouteMapRoute.get", 
        "tags": [
          "BgpRouteMap"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpRouteMapPost", 
        "parameters": [
          {
            "description": "BgpRouteMap object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        }, 
        "summary": "BgpRouteMapRoute.post", 
        "tags": [
          "BgpRouteMap"
        ]
      }
    }, 
    "/api/v0.1/routemap/{name}": {
      "get": {
        "operationId": "RouteMapGetByName", 
        "parameters": [
          {
            "description": "RouteMap name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        }, 
        "summary": "RouteMapRoute.get", 
        "tags": [
          "RouteMap"
        ]
      }
    }, 
    "/api/v0.1/routemap/{name}/id/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "RouteMapDelete", 
        "parameters": [
          {
            "description": "RouteMap name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        }, 
        "summary": "RouteMapRoute.delete", 
        "tags": [
          "RouteMap"
        ]
      }, 
      "get": {
        "operationId": "RouteMapGetById", 
        "parameters": [
          {
            "description": "RouteMap name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "RouteMap id", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        }, 
        "summary": "RouteMapRoute.get", 
        "tags": [
          "RouteMap"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "RouteMapPut", 
        "parameters": [
          {
            "description": "RouteMap name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "RouteMap object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/RouteMapObject"
            }
          }
        }, 
        "summary": "RouteMapRoute.put", 
        "tags": [
          "RouteMap"
        ]
      }
    }, 
    "/api/v0.1/routemap/{route_map_id}/bgp": {
      "get": {
        "operationId": "BgpRouteMapGetById", 
        "parameters": [
          {
            "description": "RouteMap id", 
            "in": "path", 
            "name": "route_map_id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        }, 
        "summary": "BgpRouteMapRoute.get", 
        "tags": [
          "BgpRouteMap"
        ]
      }
    }, 
    "/api/v0.1/routemap/{route_map_id}/bgp/{id}/seq/{seq}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpRouteMapDelete", 
        "parameters": [
          {
            "description": "RouteMap id", 
            "in": "path", 
            "name": "route_map_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "seq", 
            "in": "path", 
            "name": "seq", 
            "required": true, 
            "type": "integer"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        }, 
        "summary": "BgpRouteMapRoute.delete", 
        "tags": [
          "BgpRouteMap"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "BgpRouteMapPut", 
        "parameters": [
          {
            "description": "RouteMap id", 
            "in": "path", 
            "name": "route_map_id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "seq", 
            "in": "path", 
            "name": "seq", 
            "required": true, 
            "type": "integer"
          }, 
          {
            "description": "BgpRouteMap object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/BgpRouteMapObject"
            }
          }
        }, 
        "summary": "BgpRouteMapRoute.put", 
        "tags": [
          "BgpRouteMap"
        ]
      }
    }, 
    "/api/v0.1/search": {
      "get": {
        "operationId": "SearchGet", 
        "parameters": [
          {
            "description": "Host, IP Address, or MAC", 
            "in": "query", 
            "name": "search_input", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "SearchRoute.get", 
        "tags": [
          "Search"
        ]
      }
    }, 
    "/api/v0.1/service": {
      "get": {
        "operationId": "ServiceGet", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "Service id", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ServiceObject"
            }
          }
        }, 
        "summary": "ServiceRoute.get", 
        "tags": [
          "Service"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ServicePost", 
        "parameters": [
          {
            "description": "Service object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ServiceObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ServiceObject"
            }
          }
        }, 
        "summary": "ServiceRoute.post", 
        "tags": [
          "Service"
        ]
      }
    }, 
    "/api/v0.1/service/{name}/id/{id}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ServiceDelete", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ServiceObject"
            }
          }
        }, 
        "summary": "ServiceRoute.delete", 
        "tags": [
          "Service"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ServicePut", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Service object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ServiceObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ServiceObject"
            }
          }
        }, 
        "summary": "ServiceRoute.put", 
        "tags": [
          "Service"
        ]
      }
    }, 
    "/api/v0.1/service/{name}/id/{id}/metadata": {
      "delete": {
        "operationId": "ServiceMetadataDelete", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 str", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ServiceMetadataObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ServiceMetadataRoute.delete", 
        "tags": [
          "ServiceMetadata"
        ]
      }, 
      "get": {
        "operationId": "ServiceMetadataGet", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 string", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ServiceMetadataObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ServiceMetadataRoute.get", 
        "tags": [
          "ServiceMetadata"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ServiceMetadataPost", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 str", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Service metadata object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "metadata": {
                  "description": "Service metadata object.", 
                  "example": {
                    "cluster_config": [
                      "127.0.0.1", 
                      "127.0.0.2"
                    ]
                  }, 
                  "type": "object"
                }
              }, 
              "required": [
                "metadata"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ServiceMetadataObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ServiceMetadataRoute.post", 
        "tags": [
          "ServiceMetadata"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ServiceMetadataPut", 
        "parameters": [
          {
            "description": "Service name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "UUID1 str", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Service metadata object.", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "metadata": {
                  "description": "Service metadata object.", 
                  "example": {
                    "cluster_config": [
                      "127.0.0.3", 
                      "127.0.0.4"
                    ]
                  }, 
                  "type": "string"
                }
              }, 
              "required": [
                "metadata"
              ], 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ServiceMetadataObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ServiceMetadataRoute.put", 
        "tags": [
          "ServiceMetadata"
        ]
      }
    }, 
    "/api/v0.1/system/image": {
      "get": {
        "operationId": "SystemImageGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        }, 
        "summary": "SystemImageRoute.get", 
        "tags": [
          "SystemImage"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImagePost", 
        "parameters": [
          {
            "description": "SystemImage object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        }, 
        "summary": "SystemImageRoute.post", 
        "tags": [
          "SystemImage"
        ]
      }
    }, 
    "/api/v0.1/system/image/boot/history": {
      "get": {
        "operationId": "SystemImageBootHistoryGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootHistoryObject"
            }
          }
        }, 
        "summary": "SystemImageBootHistoryRoute.get", 
        "tags": [
          "SystemImageBootHistory"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageBootHistoryPost", 
        "parameters": [
          {
            "description": "SystemImageBootHistory object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootHistoryObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootHistoryObject"
            }
          }
        }, 
        "summary": "SystemImageBootHistoryRoute.post", 
        "tags": [
          "SystemImageBootHistory"
        ]
      }
    }, 
    "/api/v0.1/system/image/boot/history/{device_name}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageBootHistoryDelete", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "id", 
            "in": "path", 
            "name": "id", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootHistoryObject"
            }
          }
        }, 
        "summary": "SystemImageBootHistoryRoute.delete", 
        "tags": [
          "SystemImageBootHistory"
        ]
      }, 
      "get": {
        "operationId": "SystemImageBootHistoryGetByDevice", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootHistoryObject"
            }
          }
        }, 
        "summary": "SystemImageBootHistoryRoute.get", 
        "tags": [
          "SystemImageBootHistory"
        ]
      }
    }, 
    "/api/v0.1/system/image/boot/history/{device_name}/id/{id}": {
      "get": {
        "operationId": "SystemImageBootHistoryGetById", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "id", 
            "in": "path", 
            "name": "id", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootHistoryObject"
            }
          }
        }, 
        "summary": "SystemImageBootHistoryRoute.get", 
        "tags": [
          "SystemImageBootHistory"
        ]
      }
    }, 
    "/api/v0.1/system/image/boot/{mac_address}": {
      "get": {
        "operationId": "SystemImageBootGet", 
        "parameters": [
          {
            "description": "mac address", 
            "in": "path", 
            "name": "mac_address", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageBootObject"
            }
          }
        }, 
        "summary": "SystemImageBootRoute.get", 
        "tags": [
          "SystemImageBoot"
        ]
      }
    }, 
    "/api/v0.1/system/image/provision": {
      "get": {
        "operationId": "SystemImageProvisionGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        }, 
        "summary": "SystemImageProvisionRoute.get", 
        "tags": [
          "SystemImageProvision"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageProvisionPost", 
        "parameters": [
          {
            "description": "SystemImageProvision object", 
            "in": "body", 
            "name": "system_provision_object", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        }, 
        "summary": "SystemImageProvisionRoute.post", 
        "tags": [
          "SystemImageProvision"
        ]
      }
    }, 
    "/api/v0.1/system/image/provision/{name}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageProvisionDelete", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        }, 
        "summary": "SystemImageProvisionRoute.delete", 
        "tags": [
          "SystemImageProvision"
        ]
      }, 
      "get": {
        "operationId": "SystemImageProvisionGetByName", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        }, 
        "summary": "SystemImageProvisionRoute.get", 
        "tags": [
          "SystemImageProvision"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageProvisionPut", 
        "parameters": [
          {
            "description": "name", 
            "in": "path", 
            "name": "name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "SystemImageProvision object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        }, 
        "summary": "SystemImageProvisionRoute.put", 
        "tags": [
          "SystemImageProvision"
        ]
      }
    }, 
    "/api/v0.1/system/image/provision/{src_name}/clone": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageProvisionClonePost", 
        "parameters": [
          {
            "description": "source name", 
            "in": "path", 
            "name": "src_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "body", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "properties": {
                "is_enabled": {
                  "default": false, 
                  "description": "enabled or disabled bool", 
                  "required": false, 
                  "type": "boolean"
                }, 
                "name": {
                  "description": "destination name", 
                  "required": true, 
                  "type": "string"
                }
              }, 
              "type": "object"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageProvisionObject"
            }
          }
        }, 
        "summary": "SystemImageProvisionCloneRoute.post", 
        "tags": [
          "SystemImageProvision"
        ]
      }
    }, 
    "/api/v0.1/system/image/{device_name}": {
      "delete": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImageDelete", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        }, 
        "summary": "SystemImageRoute.delete", 
        "tags": [
          "SystemImage"
        ]
      }, 
      "get": {
        "operationId": "SystemImageGetByDevice", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        }, 
        "summary": "SystemImageRoute.get", 
        "tags": [
          "SystemImage"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemImagePut", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "SystemImage object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemImageObject"
            }
          }
        }, 
        "summary": "SystemImageRoute.put", 
        "tags": [
          "SystemImage"
        ]
      }
    }, 
    "/api/v0.1/system/provision/vm": {
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "SystemProvisionPost", 
        "parameters": [
          {
            "description": "SystemProvision object", 
            "in": "body", 
            "name": "SystemProvisionParams", 
            "schema": {
              "$ref": "#/definitions/SystemProvisionObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/SystemProvisionObject"
            }
          }
        }, 
        "summary": "SystemProvisionRoute.post", 
        "tags": [
          "SystemProvisionVm"
        ]
      }
    }, 
    "/api/v0.1/traffic/bps/pop/{pop_name}": {
      "get": {
        "operationId": "TrafficeBPSGet", 
        "parameters": [
          {
            "description": "pop name", 
            "in": "path", 
            "name": "pop_name", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success"
          }
        }, 
        "summary": "TrafficBPSRoute.get", 
        "tags": [
          "TrafficBPS"
        ]
      }
    }, 
    "/api/v0.1/user/{username}/validation/history": {
      "get": {
        "operationId": "ValidationHistoryGetByUsername", 
        "parameters": [
          {
            "description": "username", 
            "in": "path", 
            "name": "username", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ValidationHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ValidationHistoryRoute.get", 
        "tags": [
          "ValidationHistory"
        ]
      }
    }, 
    "/api/v0.1/validation/history": {
      "get": {
        "operationId": "ValidationHistoryGet", 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "items": {
                "$ref": "#/definitions/ValidationHistoryObject"
              }, 
              "type": "array"
            }
          }
        }, 
        "summary": "ValidationHistoryRoute.get", 
        "tags": [
          "ValidationHistory"
        ]
      }
    }, 
    "/api/v0.1/vlan": {
      "get": {
        "operationId": "VlanGet", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        }, 
        "summary": "VlanRoute.get", 
        "tags": [
          "Vlan"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "VlanPost", 
        "parameters": [
          {
            "description": "Vlan object", 
            "in": "body", 
            "name": "vlan", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanObject"
            }
          }
        }, 
        "summary": "VlanRoute.post", 
        "tags": [
          "Vlan"
        ]
      }
    }, 
    "/api/v0.1/vlan/interface": {
      "get": {
        "operationId": "VlanInterfaceGet", 
        "parameters": [
          {
            "description": "Device name", 
            "in": "path", 
            "name": "device_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "VlanInterface port", 
            "in": "query", 
            "name": "port", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        }, 
        "summary": "VlanInterfaceRoute.get", 
        "tags": [
          "VlanInterface"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "VlanInterfacePost", 
        "parameters": [
          {
            "description": "VlanInterface object", 
            "in": "body", 
            "name": "interface", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/VlanInterfaceObject"
            }
          }
        }, 
        "summary": "VlanInterfaceRoute.post", 
        "tags": [
          "VlanInterface"
        ]
      }
    }, 
    "/api/v0.1/ztp/device": {
      "get": {
        "operationId": "ZtpDeviceGet", 
        "parameters": [
          {
            "description": "ZTP device uuid", 
            "in": "query", 
            "name": "uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device operating os version", 
            "in": "query", 
            "name": "os_version_operating", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device intended os version", 
            "in": "query", 
            "name": "os_version_intended", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device system mac address", 
            "in": "query", 
            "name": "system_mac_address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device model name", 
            "in": "query", 
            "name": "model_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device management IP address", 
            "in": "query", 
            "name": "management_ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        }, 
        "summary": "ZtpDeviceRoute.get", 
        "tags": [
          "ZtpDevice"
        ]
      }, 
      "post": {
        "consumes": [
          "application/json"
        ], 
        "description": "ZTP device registration", 
        "operationId": "ZtpDevicePost", 
        "parameters": [
          {
            "description": "ZTP device object", 
            "in": "body", 
            "name": "device", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        }, 
        "summary": "ZtpDeviceRoute.post", 
        "tags": [
          "ZtpDevice"
        ]
      }
    }, 
    "/api/v0.1/ztp/device/{serial_number}": {
      "delete": {
        "operationId": "ZtpDeviceDelete", 
        "parameters": [
          {
            "description": "ZTP device serial number", 
            "in": "path", 
            "name": "serial_number", 
            "required": true, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        }, 
        "summary": "ZtpDeviceRoute.delete", 
        "tags": [
          "ZtpDevice"
        ]
      }, 
      "get": {
        "operationId": "ZtpDeviceGetBySerial", 
        "parameters": [
          {
            "description": "ZTP device serial number", 
            "in": "path", 
            "name": "serial_number", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device uuid", 
            "in": "query", 
            "name": "uuid", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device operating os version", 
            "in": "query", 
            "name": "os_version_operating", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device intended os version", 
            "in": "query", 
            "name": "os_version_intended", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device system mac address", 
            "in": "query", 
            "name": "system_mac_address", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device model name", 
            "in": "query", 
            "name": "model_name", 
            "required": false, 
            "type": "string"
          }, 
          {
            "description": "ZTP device management IP address", 
            "in": "query", 
            "name": "management_ip_address", 
            "required": false, 
            "type": "string"
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        }, 
        "summary": "ZtpDeviceRoute.get", 
        "tags": [
          "ZtpDevice"
        ]
      }, 
      "put": {
        "consumes": [
          "application/json"
        ], 
        "operationId": "ZtpDevicePut", 
        "parameters": [
          {
            "description": "ZTP device serial number", 
            "in": "path", 
            "name": "serial_number", 
            "required": true, 
            "type": "string"
          }, 
          {
            "description": "Dns object", 
            "in": "body", 
            "name": "body", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        ], 
        "responses": {
          "200": {
            "description": "Success", 
            "schema": {
              "$ref": "#/definitions/ZtpDevice"
            }
          }
        }, 
        "summary": "ZtpDeviceRoute.put", 
        "tags": [
          "ZtpDevice"
        ]
      }
    }
  }, 
  "security": [
    {
      "ApiKey": []
    }
  ], 
  "securityDefinitions": {
    "ApiKey": {
      "in": "header", 
      "name": "X-Polaris-Signed", 
      "type": "apiKey"
    }
  }, 
  "swagger": "2.0"
}
